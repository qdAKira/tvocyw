{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\yangkou-balance-management-system\\src\\page\\monitor\\data\\enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\page\\monitor\\data\\enterprise.vue","mtime":1622449702563},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SubModule from '@/components/subModule.vue';\nimport modal from '@/components/chart/enterprise.vue';\nimport fileDownload from 'js-file-download';\nimport { timeDatas, getCompanyList, getIndustryType, getHoleNames, getPollutedLevel, realTimeChart, getFactor, companyMonitor } from '@/request/api';\nimport { exportCompanyTimeData } from '@/request/api2';\nexport default {\n  components: {\n    'sub-menu': SubModule,\n    'modal': modal\n  },\n  data: function data() {\n    return {\n      roleID: global.roleID,\n      regionData: global.addDegoins,\n      RegionID: null,\n      regionID: global.regionID,\n      companyList: [],\n      CompanyID: [],\n      cID: global.companyID,\n      holeList: [],\n      CompanyHoleID: [],\n      industryTypeList: [],\n      IndustryTypeID: [],\n      pollutedLevelList: [],\n      PollutedLevelID: [],\n      StartTime: '',\n      EndTime: '',\n      scrollx: '',\n      scrolly: '',\n      fieldNames: {\n        children: 'child',\n        label: 'name',\n        value: 'id'\n      },\n      columns: [],\n      columnsDefault: [{\n        title: '序号',\n        dataIndex: 'number',\n        scopedSlots: {\n          customRender: 'number'\n        },\n        align: 'center',\n        width: 50\n      }, {\n        title: '企业名称',\n        dataIndex: 'companyName',\n        align: 'center'\n      }, {\n        title: '排口名称',\n        dataIndex: 'holeName',\n        align: 'center'\n      }, {\n        title: '监测时间',\n        dataIndex: 'monitorTimeText',\n        align: 'center'\n      }, {\n        title: '门禁状态',\n        dataIndex: 'accessStatus',\n        scopedSlots: {\n          customRender: 'accessStatus'\n        },\n        align: 'center'\n      }, {\n        title: '排水阀状态',\n        dataIndex: 'drainValveStatus',\n        align: 'center'\n      }, {\n        title: '收集池阀门状态',\n        dataIndex: 'collectingTankValveStatus',\n        align: 'center'\n      }, {\n        title: '雨水收集池液位',\n        dataIndex: 'collectingTankLevel',\n        align: 'center'\n      }, {\n        title: '在线状态',\n        dataIndex: 'onlineStatus',\n        scopedSlots: {\n          customRender: 'onlineStatus'\n        },\n        align: 'center'\n      }, {\n        title: '瞬时量',\n        dataIndex: 'instantaneousQuantity',\n        scopedSlots: {\n          customRender: 'instantaneousQuantity'\n        },\n        align: 'center'\n      }, {\n        title: '日排放量',\n        dataIndex: 'dailyDischargeQuantity',\n        align: 'center',\n        scopedSlots: {\n          customRender: 'instantaneousQuantity'\n        }\n      }, {\n        title: '月排放量',\n        dataIndex: 'monthDischargeQuantity',\n        align: 'center',\n        scopedSlots: {\n          customRender: 'instantaneousQuantity'\n        }\n      }, {\n        title: '年排放量',\n        dataIndex: 'yearDischargeQuantity',\n        align: 'center',\n        scopedSlots: {\n          customRender: 'instantaneousQuantity'\n        }\n      }],\n      loading: false,\n      data: [],\n      parameter: {},\n      pagination: {\n        defaultPageSize: 20,\n        pageSize: 20,\n        showQuickJumper: true,\n        showSizeChanger: true,\n        current: 1,\n        total: 0\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    console.log(this.CompanyID);\n\n    if (this.roleID === '3') {\n      this.getHole(this.cID);\n    } // 获取企业列表\n\n\n    this.getCompany(); // 获取行业类别\n\n    getIndustryType().then(function (res) {\n      if (res.status === '0') {\n        _this.industryTypeList = res.result;\n      } else {\n        console.log(res.message);\n      }\n    }); // 获取污染物等级\n\n    getPollutedLevel().then(function (res) {\n      if (res.status === '0') {\n        _this.pollutedLevelList = res.result;\n      } else {\n        console.log(res.message);\n      }\n    });\n    var data = {\n      pageIndex: this.pagination.current - 1,\n      pageSize: this.pagination.pageSize,\n      regionId: Number(this.regionID),\n      companyId: this.roleID === '3' ? this.cID : this.CompanyID\n    };\n    this.getFirstPage(data);\n    getFactor().then(function (res) {\n      if (res.status === '0') {\n        _this.factorList = res.result;\n      } else {\n        console.log(res.message);\n      }\n    });\n  },\n  mounted: function mounted() {},\n  methods: {\n    regionChange: function regionChange(value) {\n      this.RegionID = value[value.length - 1];\n      this.companyList = [];\n      this.CompanyID = [];\n    },\n    // 获取企业列表方法\n    getCompany: function getCompany() {\n      var _this2 = this;\n\n      getCompanyList({\n        regionId: this.RegionID ? this.RegionID : this.regionID\n      }).then(function (res) {\n        if (res.status === '0') {\n          _this2.companyList = res.result;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    // 获取排口列表\n    getHole: function getHole(id) {\n      var _this3 = this;\n\n      getHoleNames({\n        companyId: id\n      }).then(function (res) {\n        if (res.status === '0') {\n          console.log(res.result);\n          _this3.holeList = res.result;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    companyFocus: function companyFocus() {\n      this.getCompany();\n    },\n    companyChange: function companyChange(value) {\n      this.CompanyHoleID = [];\n      this.getHole(value);\n    },\n    getFirstPage: function getFirstPage(data) {\n      var _this4 = this;\n\n      this.loading = true; // 获取列表表头和首页数据\n\n      this.columns = [];\n      this.columns = this.columns.concat(this.columnsDefault);\n      console.log(data);\n      companyMonitor(data).then(function (res) {\n        if (res.status === '0') {\n          console.log(res);\n          var factors = res.result.list[0].factors;\n          factors.forEach(function (item, index) {\n            _this4.columns.push({\n              title: item.factorName,\n              dataIndex: 'factors' + (index + 1),\n              align: 'center'\n            });\n          });\n\n          _this4.dataHandle(res.result, _this4.pagination);\n        } else {\n          console.log(res.message);\n          _this4.pagination.total = 0;\n        }\n\n        _this4.loading = false;\n      });\n    },\n    getData: function getData(data, pagination) {\n      var _this5 = this;\n\n      companyMonitor(data).then(function (res) {\n        if (res.status === '0') {\n          _this5.dataHandle(res.result, pagination);\n        } else {\n          console.log(res.message);\n        }\n\n        _this5.loading = false;\n      });\n    },\n    pageChange: function pageChange(pagination, filters, sorter) {\n      console.log(pagination.current);\n      this.loading = true;\n      var data = {\n        regionId: this.RegionID ? this.RegionID : this.regionID,\n        companyID: this.roleID === '3' ? this.cID : this.CompanyID,\n        holeId: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\n        levelId: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\n        industryTypeId: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\n        startDate: this.StartTime,\n        endDate: this.EndTime,\n        pageIndex: pagination.current - 1,\n        pageSize: pagination.pageSize\n      };\n      console.log(data);\n      this.getData(data, pagination);\n    },\n    dataHandle: function dataHandle(data, pagination) {\n      data.list.forEach(function (item) {\n        // item = Object.assign(item, item.polluteDict)\n        item.factors.forEach(function (fac, index) {\n          item['factors' + (index + 1)] = fac.instantaneousQuantity;\n        });\n      });\n      this.loading = false;\n      this.data = data.list;\n      pagination.total = data.total;\n      this.pagination = pagination;\n    },\n    DateChange: function DateChange(date, dateString) {\n      this.StartTime = dateString[0];\n      this.EndTime = dateString[1];\n    },\n    dataSearch: function dataSearch() {\n      this.pagination.current = 1;\n      this.data = [];\n      var data = {\n        regionId: this.RegionID ? this.RegionID : this.regionID,\n        companyId: this.roleID === '3' ? this.cID : this.CompanyID,\n        holeId: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\n        levelId: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\n        industryTypeId: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\n        startDate: this.StartTime,\n        endDate: this.EndTime,\n        pageIndex: this.pagination.current - 1,\n        pageSize: this.pagination.pageSize\n      };\n      this.getFirstPage(data);\n    },\n    tableHeight: function tableHeight(data) {\n      this.scrolly = data - 75;\n    },\n    chartOpen: function chartOpen() {\n      this.$refs.modal.visible = true;\n    },\n    chartData: function chartData(data) {\n      var _this6 = this;\n\n      realTimeChart(data).then(function (res) {\n        if (res.status === '0') {\n          if (res.result.avgList && res.result.avgList.length) {\n            _this6.$refs.modal.avgData = res.result.avgList;\n            _this6.$refs.modal.avgunit = res.result.avgUnit;\n          }\n\n          if (res.result.rtdList && res.result.rtdList.length) {\n            _this6.$refs.modal.rtdData = res.result.rtdList;\n            _this6.$refs.modal.rtdunit = res.result.rtdUnit;\n          }\n\n          if (res.result.couList && res.result.couList.length) {\n            _this6.$refs.modal.couData = res.result.couList;\n            _this6.$refs.modal.couunit = res.result.couUnit;\n          }\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    customRow: function customRow(record, index) {\n      return {\n        style: {\n          backgroundColor: index % 2 ? '#fff' : '#f0f2f5'\n        }\n      };\n    }\n  }\n};",{"version":3,"sources":["enterprise.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<sub-menu @getHeight=\"tableHeight($event)\">\r\n\t\t<template slot=\"left\">\r\n\t\t\t<div></div>\r\n\t\t</template>\r\n\t\t<template slot=\"right\">\r\n\t\t\t<a-cascader v-if=\"cID==='null'?true:false\" :options=\"regionData\" :fieldNames=\"fieldNames\"\r\n\t\t\t\tplaceholder=\"行政区区域\" style=\"width: 150px\" change-on-select @change=\"regionChange\" />\r\n\t\t\t<a-select v-if=\"cID==='null'?true:false\" show-search v-model=\"CompanyID\" placeholder=\"企业\"\r\n\t\t\t\toption-filter-prop=\"children\" style=\"width: 150px\" @focus=\"companyFocus\" @change=\"companyChange\">\r\n\t\t\t\t<a-select-option v-for=\"item in companyList\" :value=\"item.id\" :key=\"item.id\">{{item.companyName}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"CompanyHoleID\" placeholder=\"排口名称\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in holeList\" :value=\"item.id\" :key=\"item.id\">{{item.holeName}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"IndustryTypeID\" placeholder=\"行业类别\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in industryTypeList\" :value=\"item.id\" :key=\"item.id\">{{item.name}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"PollutedLevelID\" placeholder=\"污染物等级\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in pollutedLevelList\" :value=\"item.id\" :key=\"item.id\">{{item.name}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-range-picker @change=\"DateChange\" />\r\n\t\t\t<a-button type=\"primary\" @click=\"dataSearch\">查询</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"table\">\r\n\t\t\t<a-table style=\"height: 100%;\" :columns=\"columns\" :data-source=\"data\" :loading=\"loading\"\r\n\t\t\t\t:scroll=\"{ x: scrollx,y: scrolly }\" :rowKey=\"record => record.id\" size=\"middle\" :pagination=\"pagination\"\r\n\t\t\t\t@change=\"pageChange\" :customRow=\"customRow\">\r\n\t\t\t\t<span slot=\"number\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t{{index + 1 }}\r\n\t\t\t\t</span>\r\n\t\t\t\t<a-tooltip slot=\"accessStatus\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t{{record.accessStatusTime}}\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t{{text}}\r\n\t\t\t\t</a-tooltip>\r\n\t\t\t\t<a-tooltip slot=\"onlineStatus\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t{{record.onlineTimeText}}\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t{{text}}\r\n\t\t\t\t</a-tooltip>\r\n\t\t\t\t<a-tooltip slot=\"instantaneousQuantity\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t{{record.dataTimeText}}\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t{{text}}\r\n\t\t\t\t</a-tooltip>\r\n\t\t\t\t<a-tooltip slot=\"dailyDischargeQuantity\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t{{record.dailyDataTimeText}}\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t{{text}}\r\n\t\t\t\t</a-tooltip>\r\n\t\t\t\t<a-tooltip slot=\"monthDischargeQuantity\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t{{record.monthDataTimeText}}\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t{{text}}\r\n\t\t\t\t</a-tooltip>\r\n\t\t\t\t<a-tooltip slot=\"yearDischargeQuantity\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t{{record.yearDataTimeText}}\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t{{text}}\r\n\t\t\t\t</a-tooltip>\r\n\t\t\t</a-table>\r\n\t\t</template>\r\n\t\t<template slot=\"fixed\">\r\n\t\t\t<modal ref=\"modal\" title=\"数据统计与报表/企业数据报表/实时数据报表\" rtd :getData=\"chartData\"></modal>\r\n\t\t</template>\r\n\t</sub-menu>\r\n</template>\r\n\r\n<script>\r\n\timport SubModule from '@/components/subModule.vue'\r\n\timport modal from '@/components/chart/enterprise.vue'\r\n\timport fileDownload from 'js-file-download'\r\n\r\n\timport {\r\n\t\ttimeDatas,\r\n\t\tgetCompanyList,\r\n\t\tgetIndustryType,\r\n\t\tgetHoleNames,\r\n\t\tgetPollutedLevel,\r\n\t\trealTimeChart,\r\n\t\tgetFactor,\r\n\t\tcompanyMonitor\r\n\t} from '@/request/api'\r\n\r\n\timport {\r\n\t\texportCompanyTimeData\r\n\t} from '@/request/api2'\r\n\r\n\r\n\r\n\r\n\r\n\texport default ({\r\n\t\tcomponents: {\r\n\t\t\t'sub-menu': SubModule,\r\n\t\t\t'modal': modal\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\troleID: global.roleID,\r\n\t\t\t\tregionData: global.addDegoins,\r\n\t\t\t\tRegionID: null,\r\n\t\t\t\tregionID: global.regionID,\r\n\t\t\t\tcompanyList: [],\r\n\t\t\t\tCompanyID: [],\r\n\t\t\t\tcID: global.companyID,\r\n\t\t\t\tholeList: [],\r\n\t\t\t\tCompanyHoleID: [],\r\n\t\t\t\tindustryTypeList: [],\r\n\t\t\t\tIndustryTypeID: [],\r\n\t\t\t\tpollutedLevelList: [],\r\n\t\t\t\tPollutedLevelID: [],\r\n\t\t\t\tStartTime: '',\r\n\t\t\t\tEndTime: '',\r\n\t\t\t\tscrollx: '',\r\n\t\t\t\tscrolly: '',\r\n\t\t\t\tfieldNames: {\r\n\t\t\t\t\tchildren: 'child',\r\n\t\t\t\t\tlabel: 'name',\r\n\t\t\t\t\tvalue: 'id',\r\n\t\t\t\t},\r\n\t\t\t\tcolumns: [],\r\n\t\t\t\tcolumnsDefault: [{\r\n\t\t\t\t\t\ttitle: '序号',\r\n\t\t\t\t\t\tdataIndex: 'number',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'number'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\twidth: 50\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '企业名称',\r\n\t\t\t\t\t\tdataIndex: 'companyName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '排口名称',\r\n\t\t\t\t\t\tdataIndex: 'holeName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '监测时间',\r\n\t\t\t\t\t\tdataIndex: 'monitorTimeText',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '门禁状态',\r\n\t\t\t\t\t\tdataIndex: 'accessStatus',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'accessStatus'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '排水阀状态',\r\n\t\t\t\t\t\tdataIndex: 'drainValveStatus',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '收集池阀门状态',\r\n\t\t\t\t\t\tdataIndex: 'collectingTankValveStatus',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '雨水收集池液位',\r\n\t\t\t\t\t\tdataIndex: 'collectingTankLevel',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '在线状态',\r\n\t\t\t\t\t\tdataIndex: 'onlineStatus',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'onlineStatus'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '瞬时量',\r\n\t\t\t\t\t\tdataIndex: 'instantaneousQuantity',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'instantaneousQuantity'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '日排放量',\r\n\t\t\t\t\t\tdataIndex: 'dailyDischargeQuantity',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'instantaneousQuantity'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '月排放量',\r\n\t\t\t\t\t\tdataIndex: 'monthDischargeQuantity',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'instantaneousQuantity'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '年排放量',\r\n\t\t\t\t\t\tdataIndex: 'yearDischargeQuantity',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'instantaneousQuantity'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tparameter: {},\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tdefaultPageSize: 20,\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tshowQuickJumper: true,\r\n\t\t\t\t\tshowSizeChanger: true,\r\n\t\t\t\t\tcurrent: 1,\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tconsole.log(this.CompanyID)\r\n\r\n\t\t\tif (this.roleID === '3') {\r\n\t\t\t\tthis.getHole(this.cID)\r\n\t\t\t}\r\n\r\n\t\t\t// 获取企业列表\r\n\t\t\tthis.getCompany()\r\n\r\n\r\n\t\t\t// 获取行业类别\r\n\t\t\tgetIndustryType().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tthis.industryTypeList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// 获取污染物等级\r\n\t\t\tgetPollutedLevel().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tthis.pollutedLevelList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet data = {\r\n\t\t\t\tpageIndex: this.pagination.current - 1,\r\n\t\t\t\tpageSize: this.pagination.pageSize,\r\n\t\t\t\tregionId: Number(this.regionID),\r\n\t\t\t\tcompanyId: this.roleID === '3' ? this.cID : this.CompanyID\r\n\t\t\t}\r\n\t\t\tthis.getFirstPage(data)\r\n\r\n\t\t\tgetFactor().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tthis.factorList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tmounted() {},\r\n\t\tmethods: {\r\n\t\t\tregionChange(value) {\r\n\t\t\t\tthis.RegionID = value[value.length - 1]\r\n\t\t\t\tthis.companyList = []\r\n\t\t\t\tthis.CompanyID = []\r\n\t\t\t},\r\n\t\t\t// 获取企业列表方法\r\n\t\t\tgetCompany() {\r\n\t\t\t\tgetCompanyList({\r\n\t\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.companyList = res.result\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 获取排口列表\r\n\t\t\tgetHole(id) {\r\n\t\t\t\tgetHoleNames({\r\n\t\t\t\t\tcompanyId: id\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\t\tthis.holeList = res.result\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tcompanyFocus() {\r\n\t\t\t\tthis.getCompany()\r\n\t\t\t},\r\n\t\t\tcompanyChange(value) {\r\n\t\t\t\tthis.CompanyHoleID = []\r\n\t\t\t\tthis.getHole(value)\r\n\t\t\t},\r\n\t\t\tgetFirstPage(data) {\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\t// 获取列表表头和首页数据\r\n\t\t\t\tthis.columns = []\r\n\t\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tcompanyMonitor(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\tconst factors = res.result.list[0].factors\r\n\r\n\r\n\t\t\t\t\t\tfactors.forEach((item, index) => {\r\n\t\t\t\t\t\t\tthis.columns.push({\r\n\t\t\t\t\t\t\t\ttitle: item.factorName,\r\n\t\t\t\t\t\t\t\tdataIndex: 'factors' + (index + 1),\r\n\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t\tthis.pagination.total = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetData(data, pagination) {\r\n\t\t\t\tcompanyMonitor(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.dataHandle(res.result, pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpageChange(pagination, filters, sorter) {\r\n\t\t\t\tconsole.log(pagination.current)\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t\tcompanyID: this.roleID === '3' ? this.cID : this.CompanyID,\r\n\t\t\t\t\tholeId: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\r\n\t\t\t\t\tlevelId: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\r\n\t\t\t\t\tindustryTypeId: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\r\n\t\t\t\t\tstartDate: this.StartTime,\r\n\t\t\t\t\tendDate: this.EndTime,\r\n\t\t\t\t\tpageIndex: pagination.current - 1,\r\n\t\t\t\t\tpageSize: pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(data)\r\n\r\n\t\t\t\tthis.getData(data, pagination)\r\n\t\t\t},\r\n\t\t\tdataHandle(data, pagination) {\r\n\t\t\t\tdata.list.forEach(item => {\r\n\t\t\t\t\t// item = Object.assign(item, item.polluteDict)\r\n\t\t\t\t\titem.factors.forEach((fac, index) => {\r\n\t\t\t\t\t\titem['factors' + (index + 1)] = fac.instantaneousQuantity\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tthis.loading = false\r\n\t\t\t\tthis.data = data.list\r\n\t\t\t\tpagination.total = data.total\r\n\t\t\t\tthis.pagination = pagination\r\n\t\t\t},\r\n\t\t\tDateChange(date, dateString) {\r\n\t\t\t\tthis.StartTime = dateString[0]\r\n\t\t\t\tthis.EndTime = dateString[1]\r\n\t\t\t},\r\n\t\t\tdataSearch() {\r\n\t\t\t\tthis.pagination.current = 1\r\n\t\t\t\tthis.data = []\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t\tcompanyId: this.roleID === '3' ? this.cID : this.CompanyID,\r\n\t\t\t\t\tholeId: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\r\n\t\t\t\t\tlevelId: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\r\n\t\t\t\t\tindustryTypeId: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\r\n\t\t\t\t\tstartDate: this.StartTime,\r\n\t\t\t\t\tendDate: this.EndTime,\r\n\t\t\t\t\tpageIndex: this.pagination.current - 1,\r\n\t\t\t\t\tpageSize: this.pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\tthis.getFirstPage(data)\r\n\t\t\t},\r\n\t\t\ttableHeight(data) {\r\n\t\t\t\tthis.scrolly = data - 75\r\n\t\t\t},\r\n\t\t\tchartOpen() {\r\n\t\t\t\tthis.$refs.modal.visible = true\r\n\t\t\t},\r\n\t\t\tchartData(data) {\r\n\t\t\t\trealTimeChart(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tif (res.result.avgList && res.result.avgList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.avgData = res.result.avgList\r\n\t\t\t\t\t\t\tthis.$refs.modal.avgunit = res.result.avgUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (res.result.rtdList && res.result.rtdList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.rtdData = res.result.rtdList\r\n\t\t\t\t\t\t\tthis.$refs.modal.rtdunit = res.result.rtdUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (res.result.couList && res.result.couList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.couData = res.result.couList\r\n\t\t\t\t\t\t\tthis.$refs.modal.couunit = res.result.couUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tcustomRow(record, index) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tbackgroundColor: index % 2 ? '#fff' : '#f0f2f5'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<style scoped>\r\n</style>\n"],"sourceRoot":"src/page/monitor/data"}]}