{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\yangkou-balance-management-system\\src\\promission.js","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\promission.js","mtime":1623052805993},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"D:\\\\Git\\\\yangkou-balance-management-system\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.some\";\nimport router from \"./router\";\n\nvar _import = require(\"./router/import.js\");\n\nvar getRouter;\nvar children = localStorage.getItem('fakeRouter');\nchildren = JSON.parse(children);\nvar fakeRouter = {\n  \"children\": children ? children : []\n};\nvar fakeRouterC = [];\nrouterDo(fakeRouter.children);\n\nfunction routerDo(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i].children && array[i].children.length) {\n      routerDo(array[i].children);\n    } else {\n      fakeRouterC.push(array[i]);\n    }\n  }\n}\n\nif (sessionStorage.getItem('token') || localStorage.getItem('token')) {\n  getRouter = filterAsyncRouter(fakeRouterC);\n  router.options.routes[0].children = getRouter;\n  router.addRoutes(router.options.routes);\n}\n\nrouter.beforeEach(function (to, from, next) {\n  console.log(1);\n\n  if (to.meta.title) {\n    document.title = to.meta.title;\n  }\n\n  if (to.matched.some(function (record) {\n    return record.meta.requireAuth;\n  })) {\n    if (!sessionStorage.getItem('token') && !localStorage.getItem('token')) {\n      next({\n        path: '/login'\n      });\n    } else {\n      if (!getRouter) {\n        if (!getObjArr('children')) {\n          // axios\n          getRouter = fakeRouter.children; //假装模拟后台请求得到的路由数据\n\n          saveObjArr('children', getRouter); //存储路由到localStorage\n\n          routerGo(to, next); //执行路由跳转方法\n        } else {\n          //从localStorage拿到了路由\n          getRouter = getObjArr('children'); //拿到路由\n\n          routerGo(to, next);\n        }\n      } else {\n        if (to.path == '/') {\n          if (localStorage.getItem('roleID') == 3) {\n            next({\n              path: '/media/company'\n            });\n          } else {\n            next({\n              path: '/media/home'\n            });\n          }\n        } else {\n          console.log(to.path);\n          console.log(router.options.routes);\n          next();\n        }\n      }\n    }\n  } else {\n    next();\n  }\n});\n\nfunction routerGo(to, next) {\n  fakeRouterC = [];\n  routerDo(getRouter);\n  getRouter = filterAsyncRouter(fakeRouterC); //过滤路由\n  // router.addRoutes(getRouter) //动态添加路由\n\n  router.options.routes[0].children = getRouter;\n  router.addRoutes(router.options.routes);\n  global.antRouter = getRouter; //将路由数据传递给全局变量，做菜单渲染工作\n\n  next(_objectSpread({}, to, {\n    replace: true\n  }));\n}\n\nfunction saveObjArr(name, data) {\n  //localStorage 存储数组对象的方法\n  localStorage.setItem(name, JSON.stringify(data));\n}\n\nfunction getObjArr(name) {\n  //localStorage 获取数组对象的方法\n  return JSON.parse(window.localStorage.getItem(name));\n}\n\nfunction filterAsyncRouter(asyncRouterMap) {\n  //遍历后台传来的路由字符串，转换为组件对象\n  var accessedRouters = asyncRouterMap.filter(function (route) {\n    if (route.component) {\n      route.component = _import(route.component) || null;\n    }\n\n    if (route.children && route.children.length) {\n      route.children = filterAsyncRouter(route.children);\n    }\n\n    return true;\n  });\n  return accessedRouters;\n}",{"version":3,"sources":["D:\\Git\\yangkou-balance-management-system\\src\\promission.js"],"names":["router","_import","require","getRouter","children","localStorage","getItem","JSON","parse","fakeRouter","fakeRouterC","routerDo","array","i","length","push","sessionStorage","filterAsyncRouter","options","routes","addRoutes","beforeEach","to","from","next","console","log","meta","title","document","matched","some","record","requireAuth","path","getObjArr","saveObjArr","routerGo","global","antRouter","replace","name","data","setItem","stringify","window","asyncRouterMap","accessedRouters","filter","route","component"],"mappings":"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","sourcesContent":["import router from './router'\r\n\r\nconst _import = require('./router/import.js')\r\n\r\nlet getRouter\r\n\r\nlet children = localStorage.getItem('fakeRouter')\r\nchildren = JSON.parse(children)\r\n\r\nlet fakeRouter = {\r\n\t\"children\": children ? children : []\r\n}\r\n\r\nlet fakeRouterC = []\r\n\r\nrouterDo(fakeRouter.children)\r\n\r\nfunction routerDo(array) {\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tif (array[i].children && array[i].children.length) {\r\n\t\t\trouterDo(array[i].children)\r\n\t\t} else {\r\n\t\t\tfakeRouterC.push(array[i])\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (sessionStorage.getItem('token') || localStorage.getItem('token')) {\r\n\tgetRouter = filterAsyncRouter(fakeRouterC)\r\n\trouter.options.routes[0].children = getRouter\r\n\trouter.addRoutes(router.options.routes)\r\n}\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n\tconsole.log(1)\r\n\tif (to.meta.title) {\r\n\t\tdocument.title = to.meta.title\r\n\t}\r\n\tif (to.matched.some(record => record.meta.requireAuth)) {\r\n\t\tif (!sessionStorage.getItem('token') && !localStorage.getItem('token')) {\r\n\t\t\tnext({\r\n\t\t\t\tpath: '/login',\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (!getRouter) {\r\n\t\t\t\tif (!getObjArr('children')) {\r\n\t\t\t\t\t// axios\r\n\t\t\t\t\tgetRouter = fakeRouter.children //假装模拟后台请求得到的路由数据\r\n\t\t\t\t\tsaveObjArr('children', getRouter) //存储路由到localStorage\r\n\t\t\t\t\trouterGo(to, next) //执行路由跳转方法\r\n\t\t\t\t} else { //从localStorage拿到了路由\r\n\t\t\t\t\tgetRouter = getObjArr('children') //拿到路由\r\n\t\t\t\t\trouterGo(to, next)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (to.path == '/') {\r\n\t\t\t\t\tif (localStorage.getItem('roleID') == 3) {\r\n\t\t\t\t\t\tnext({\r\n\t\t\t\t\t\t\tpath: '/media/company'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnext({\r\n\t\t\t\t\t\t\tpath: '/media/home'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(to.path)\r\n\t\t\t\t\tconsole.log(router.options.routes)\r\n\t\t\t\t\tnext()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tnext()\r\n\t}\r\n})\r\n\r\nfunction routerGo(to, next) {\r\n\tfakeRouterC = []\r\n\trouterDo(getRouter)\r\n\tgetRouter = filterAsyncRouter(fakeRouterC) //过滤路由\r\n\t// router.addRoutes(getRouter) //动态添加路由\r\n\trouter.options.routes[0].children = getRouter\r\n\trouter.addRoutes(router.options.routes)\r\n\tglobal.antRouter = getRouter //将路由数据传递给全局变量，做菜单渲染工作\r\n\tnext({\r\n\t\t...to,\r\n\t\treplace: true\r\n\t})\r\n}\r\n\r\nfunction saveObjArr(name, data) { //localStorage 存储数组对象的方法\r\n\tlocalStorage.setItem(name, JSON.stringify(data))\r\n}\r\n\r\nfunction getObjArr(name) { //localStorage 获取数组对象的方法\r\n\treturn JSON.parse(window.localStorage.getItem(name));\r\n\r\n}\r\n\r\nfunction filterAsyncRouter(asyncRouterMap) { //遍历后台传来的路由字符串，转换为组件对象\r\n\tconst accessedRouters = asyncRouterMap.filter(route => {\r\n\t\tif (route.component) {\r\n\t\t\troute.component = _import(route.component) || null\r\n\t\t}\r\n\t\tif (route.children && route.children.length) {\r\n\t\t\troute.children = filterAsyncRouter(route.children)\r\n\t\t}\r\n\t\treturn true\r\n\t})\r\n\r\n\treturn accessedRouters\r\n}\n"]}]}