{"remainingRequest":"C:\\Users\\Caoji\\Desktop\\122\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Caoji\\Desktop\\122\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Caoji\\Desktop\\122\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Caoji\\Desktop\\122\\src\\page\\reportForm\\sewageInterceptingWell\\minute.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Caoji\\Desktop\\122\\src\\page\\reportForm\\sewageInterceptingWell\\minute.vue","mtime":1613790689000},{"path":"C:\\Users\\Caoji\\Desktop\\122\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"C:\\Users\\Caoji\\Desktop\\122\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"C:\\Users\\Caoji\\Desktop\\122\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"C:\\Users\\Caoji\\Desktop\\122\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SubModule from '@/components/subModule.vue';\nimport fileDownload from 'js-file-download';\nimport { wellNames, wellMonitorPoint, wellMinuteDatas } from '@/request/api';\nexport default {\n  components: {\n    'sub-menu': SubModule\n  },\n  data: function data() {\n    return {\n      value: undefined,\n      wellList: [],\n      WellID: [],\n      wellMonitorPointList: [],\n      WellMonitorPointID: [],\n      StartTime: '',\n      EndTime: '',\n      scrollx: '',\n      fieldNames: {\n        children: 'childNameList',\n        label: 'regionName',\n        value: 'id'\n      },\n      columns: [],\n      columnsDefault: [{\n        title: '序号',\n        dataIndex: 'number',\n        scopedSlots: {\n          customRender: 'number'\n        },\n        align: 'center',\n        fixed: 'left',\n        width: 50\n      }, {\n        title: '截污井名称',\n        dataIndex: 'wellName',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }, {\n        title: '监控点名称',\n        dataIndex: 'monitorPointName',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }, {\n        title: '监测时间',\n        dataIndex: 'monitorTimeText',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }, {\n        title: '污染物类别',\n        dataIndex: 'pollutedType',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }],\n      loading: false,\n      data: [],\n      pagination: {\n        defaultPageSize: 20,\n        pageSize: 20,\n        showQuickJumper: true,\n        showSizeChanger: true,\n        current: 1,\n        total: 0\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // 获取截污井名称列表\n    wellNames().then(function (res) {\n      if (res.status === '0') {\n        console.log(res);\n        _this.wellList = res.result;\n      } else {\n        console.log(res.message);\n      }\n    });\n    var data = {\n      PageIndex: this.pagination.current - 1,\n      PageSize: this.pagination.pageSize // 获取第一页数据\n\n    };\n    this.getFirstPage(data);\n  },\n  mounted: function mounted() {},\n  methods: {\n    wellChange: function wellChange(value) {\n      console.log(value);\n      this.getWellMonitorPoint(value);\n    },\n    getWellMonitorPoint: function getWellMonitorPoint(id) {\n      wellMonitorPoint({\n        regionId: id\n      }).then(function (res) {\n        if (res.status === '0') {\n          console.log(res.result); // this.holeList = res.result\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    DateChange: function DateChange(date, dateString) {\n      console.log(date, dateString);\n      this.StartTime = dateString[0];\n      this.EndTime = dateString[1];\n    },\n    getFirstPage: function getFirstPage(data) {\n      var _this2 = this;\n\n      console.log(data);\n      this.loading = true; // 获取列表表头和首页数据\n\n      this.columns = [];\n      this.columns = this.columns.concat(this.columnsDefault);\n      wellMinuteDatas(data).then(function (res) {\n        console.log(res);\n\n        if (res.status === '0') {\n          _this2.scrollx = 350;\n          var polluteDict = res.result.list[0].polluteDict;\n          Object.keys(polluteDict).forEach(function (key) {\n            _this2.columns.push({\n              title: key,\n              dataIndex: key,\n              align: 'center',\n              width: 140\n            });\n\n            _this2.scrollx += 140;\n          });\n\n          _this2.dataHandle(res.result, _this2.pagination);\n        } else {\n          console.log(res.message);\n          _this2.pagination.total = 0;\n        }\n\n        _this2.loading = false;\n      });\n    },\n    getData: function getData(data, pagination) {\n      var _this3 = this;\n\n      console.log(data);\n      wellMinuteDatas(data).then(function (res) {\n        if (res.status === '0') {\n          _this3.dataHandle(res.result, pagination);\n        } else {\n          console.log(res.message);\n        }\n\n        _this3.loading = false;\n      });\n    },\n    pageChange: function pageChange(pagination, filters, sorter) {\n      console.log(pagination.current);\n      this.loading = true;\n      var data = {\n        WellID: this.WellID.constructor == Array ? '' : this.WellID,\n        WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\n        StartTime: this.StartTime,\n        EndTime: this.EndTime,\n        PageIndex: pagination.current - 1,\n        PageSize: pagination.pageSize\n      };\n      this.getData(data, pagination);\n    },\n    dataHandle: function dataHandle(data, pagination) {\n      console.log(pagination);\n      data.list.forEach(function (item) {\n        item = Object.assign(item, item.polluteDict);\n      });\n      this.loading = false;\n      this.data = data.list;\n      pagination.total = data.total;\n      this.pagination = pagination;\n    },\n    search: function search() {\n      this.pagination.current = 1;\n      this.data = [];\n      var data = {\n        WellID: this.WellID.constructor == Array ? '' : this.WellID,\n        WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\n        StartTime: this.StartTime,\n        EndTime: this.EndTime,\n        PageIndex: this.pagination.current - 1,\n        PageSize: this.pagination.pageSize\n      };\n      this.getFirstPage(data);\n    }\n  }\n};",{"version":3,"sources":["minute.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<sub-menu>\r\n\t\t<template slot=\"left\">\r\n\t\t\t<a-button type=\"primary\">新建</a-button>\r\n\t\t\t<a-button type=\"primary\">导入</a-button>\r\n\t\t\t<a-button type=\"primary\">图表</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"right\">\r\n\t\t\t<a-select show-search v-model=\"WellID\" placeholder=\"截污井名称\" option-filter-prop=\"children\" style=\"width: 120px\"\r\n\t\t\t @change=\"wellChange\">\r\n\t\t\t\t<a-select-option v-for=\"item in wellList\" :value=\"item.id\" :key=\"item.id\">{{item.wellName}}</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"WellMonitorPointID\" placeholder=\"截污井监控点名称\" option-filter-prop=\"children\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in wellMonitorPointList\" :value=\"item.id\" :key=\"item.id\">{{item.monitorPointName}}</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-range-picker @change=\"DateChange\" />\r\n\t\t\t<a-button type=\"primary\" @click=\"search\">查询</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"table\">\r\n\t\t\t<a-table style=\"height: 100%;\" :columns=\"columns\" :data-source=\"data\" :loading=\"loading\" :scroll=\"{ x: scrollx,y: 430 }\"\r\n\t\t\t :rowKey=\"record => record.id\" size=\"middle\" :pagination=\"pagination\" @change=\"pageChange\">\r\n\t\t\t\t<span slot=\"number\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t{{index + 1 }}\r\n\t\t\t\t</span>\r\n\t\t\t</a-table>\r\n\t\t</template>\r\n\t</sub-menu>\r\n</template>\r\n\r\n<script>\r\n\timport SubModule from '@/components/subModule.vue'\r\n\timport fileDownload from 'js-file-download'\r\n\r\n\timport {\r\n\t\twellNames,\r\n\t\twellMonitorPoint,\r\n\t\twellMinuteDatas\r\n\t} from '@/request/api'\r\n\r\n\texport default ({\r\n\t\tcomponents: {\r\n\t\t\t'sub-menu': SubModule\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\twellList: [],\r\n\t\t\t\tWellID: [],\r\n\t\t\t\twellMonitorPointList: [],\r\n\t\t\t\tWellMonitorPointID: [],\r\n\t\t\t\tStartTime: '',\r\n\t\t\t\tEndTime: '',\r\n\t\t\t\tscrollx: '',\r\n\t\t\t\tfieldNames: {\r\n\t\t\t\t\tchildren: 'childNameList',\r\n\t\t\t\t\tlabel: 'regionName',\r\n\t\t\t\t\tvalue: 'id',\r\n\t\t\t\t},\r\n\t\t\t\tcolumns: [],\r\n\t\t\t\tcolumnsDefault: [{\r\n\t\t\t\t\t\ttitle: '序号',\r\n\t\t\t\t\t\tdataIndex: 'number',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'number'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 50\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '截污井名称',\r\n\t\t\t\t\t\tdataIndex: 'wellName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '监控点名称',\r\n\t\t\t\t\t\tdataIndex: 'monitorPointName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '监测时间',\r\n\t\t\t\t\t\tdataIndex: 'monitorTimeText',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '污染物类别',\r\n\t\t\t\t\t\tdataIndex: 'pollutedType',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tdefaultPageSize: 20,\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tshowQuickJumper: true,\r\n\t\t\t\t\tshowSizeChanger: true,\r\n\t\t\t\t\tcurrent: 1,\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// 获取截污井名称列表\r\n\t\t\twellNames().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\tthis.wellList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet data = {\r\n\t\t\t\tPageIndex: this.pagination.current - 1,\r\n\t\t\t\tPageSize: this.pagination.pageSize\r\n\t\t\t}\r\n\t\t\t// 获取第一页数据\r\n\t\t\tthis.getFirstPage(data)\r\n\t\t},\r\n\t\tmounted() {},\r\n\t\tmethods: {\r\n\t\t\twellChange(value) {\r\n\t\t\t\tconsole.log(value)\r\n\t\t\t\tthis.getWellMonitorPoint(value)\r\n\t\t\t},\r\n\t\t\tgetWellMonitorPoint(id) {\r\n\t\t\t\twellMonitorPoint({\r\n\t\t\t\t\tregionId: id\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\t\t// this.holeList = res.result\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tDateChange(date, dateString) {\r\n\t\t\t\tconsole.log(date, dateString)\r\n\t\t\t\tthis.StartTime = dateString[0]\r\n\t\t\t\tthis.EndTime = dateString[1]\r\n\t\t\t},\r\n\t\t\tgetFirstPage(data){\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\t// 获取列表表头和首页数据\r\n\t\t\t\tthis.columns = []\r\n\t\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\r\n\t\t\t\twellMinuteDatas(data).then(res => {\r\n\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.scrollx = 350\r\n\t\t\t\t\t\tconst polluteDict = res.result.list[0].polluteDict\r\n\t\t\t\t\t\tObject.keys(polluteDict).forEach(key => {\r\n\t\t\t\t\t\t\tthis.columns.push({\r\n\t\t\t\t\t\t\t\ttitle: key,\r\n\t\t\t\t\t\t\t\tdataIndex: key,\r\n\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t\twidth: 140\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.scrollx += 140\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t\tthis.pagination.total = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetData(data, pagination) {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\twellMinuteDatas(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.dataHandle(res.result, pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpageChange(pagination, filters, sorter) {\r\n\t\t\t\tconsole.log(pagination.current)\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\tWellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t\tPageIndex: pagination.current - 1,\r\n\t\t\t\t\tPageSize: pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tthis.getData(data, pagination)\r\n\t\t\t},\r\n\t\t\tdataHandle(data, pagination) {\r\n\t\t\t\tconsole.log(pagination)\r\n\t\t\t\tdata.list.forEach(item => {\r\n\t\t\t\t\titem = Object.assign(item, item.polluteDict)\r\n\t\t\t\t})\r\n\t\t\t\tthis.loading = false\r\n\t\t\t\tthis.data = data.list\r\n\t\t\t\tpagination.total = data.total\r\n\t\t\t\tthis.pagination = pagination\r\n\t\t\t},\r\n\t\t\tsearch() {\r\n\t\t\t\tthis.pagination.current = 1\r\n\t\t\t\tthis.data = []\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\tWellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t\tPageIndex: this.pagination.current - 1,\r\n\t\t\t\t\tPageSize: this.pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\tthis.getFirstPage(data)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/page/reportForm/sewageInterceptingWell"}]}