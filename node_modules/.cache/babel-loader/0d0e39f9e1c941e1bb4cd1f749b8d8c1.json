{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\yangkou-balance-management-system\\src\\request\\http.js","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\request\\http.js","mtime":1607321924546},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606785092522},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1606785115728}],"contextDependencies":[],"result":["import axios from 'axios';\nimport QS from 'qs'; // 环境的切换\n\nif (process.env.NODE_ENV == 'development') {\n  axios.defaults.baseURL = 'http://10.0.0.73:22083/';\n} else if (process.env.NODE_ENV == 'debug') {\n  axios.defaults.baseURL = 'http://10.0.0.73:22083/';\n} else if (process.env.NODE_ENV == 'production') {\n  axios.defaults.baseURL = 'http://10.0.0.73:22083/';\n} // 请求超时时间\n\n\naxios.defaults.timeout = 10000; // post请求头\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\nexport function get(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.data);\n    });\n  });\n}\nexport function post(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.post(url, QS.stringify(params)).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.data);\n    });\n  });\n}",{"version":3,"sources":["D:\\Git\\yangkou-balance-management-system\\src\\request\\http.js"],"names":["axios","QS","process","env","NODE_ENV","defaults","baseURL","timeout","headers","post","get","url","params","Promise","resolve","reject","then","res","data","catch","err","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf,C,CAEA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAA5B,EAA2C;AAC1CJ,EAAAA,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,yBAAzB;AACA,CAFD,MAEO,IAAIJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,OAA5B,EAAqC;AAC3CJ,EAAAA,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,yBAAzB;AACA,CAFM,MAEA,IAAIJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,YAA5B,EAA0C;AAChDJ,EAAAA,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,yBAAzB;AACA,C,CAED;;;AACAN,KAAK,CAACK,QAAN,CAAeE,OAAf,GAAyB,KAAzB,C,CAEA;;AACAP,KAAK,CAACK,QAAN,CAAeG,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,iDAA9C;AAEA,OAAO,SAASC,GAAT,CAAaC,GAAb,EAAkBC,MAAlB,EAA0B;AAChC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCf,IAAAA,KAAK,CAACU,GAAN,CAAUC,GAAV,EAAe;AACdC,MAAAA,MAAM,EAAEA;AADM,KAAf,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACdH,MAAAA,OAAO,CAACG,GAAG,CAACC,IAAL,CAAP;AACA,KAJD,EAIGC,KAJH,CAIS,UAAAC,GAAG,EAAI;AACfL,MAAAA,MAAM,CAACK,GAAG,CAACF,IAAL,CAAN;AACA,KAND;AAOA,GARM,CAAP;AASA;AAED,OAAO,SAAST,IAAT,CAAcE,GAAd,EAAmBC,MAAnB,EAA2B;AACjC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCf,IAAAA,KAAK,CAACS,IAAN,CAAWE,GAAX,EAAgBV,EAAE,CAACoB,SAAH,CAAaT,MAAb,CAAhB,EACEI,IADF,CACO,UAAAC,GAAG,EAAI;AACZH,MAAAA,OAAO,CAACG,GAAG,CAACC,IAAL,CAAP;AACA,KAHF,EAIEC,KAJF,CAIQ,UAAAC,GAAG,EAAI;AACbL,MAAAA,MAAM,CAACK,GAAG,CAACF,IAAL,CAAN;AACA,KANF;AAOA,GARM,CAAP;AASA","sourcesContent":["import axios from 'axios'\r\nimport QS from 'qs'\r\n\r\n// 环境的切换\r\nif (process.env.NODE_ENV == 'development') {\r\n\taxios.defaults.baseURL = 'http://10.0.0.73:22083/';\r\n} else if (process.env.NODE_ENV == 'debug') {\r\n\taxios.defaults.baseURL = 'http://10.0.0.73:22083/';\r\n} else if (process.env.NODE_ENV == 'production') {\r\n\taxios.defaults.baseURL = 'http://10.0.0.73:22083/';\r\n}\r\n\r\n// 请求超时时间\r\naxios.defaults.timeout = 10000;\r\n\r\n// post请求头\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\r\n\r\nexport function get(url, params) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.get(url, {\r\n\t\t\tparams: params\r\n\t\t}).then(res => {\r\n\t\t\tresolve(res.data);\r\n\t\t}).catch(err => {\r\n\t\t\treject(err.data)\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport function post(url, params) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.post(url, QS.stringify(params))\r\n\t\t\t.then(res => {\r\n\t\t\t\tresolve(res.data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\treject(err.data)\r\n\t\t\t})\r\n\t})\r\n}\n"]}]}