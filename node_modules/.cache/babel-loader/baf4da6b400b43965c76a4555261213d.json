{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\yangkou-balance-management-system\\src\\page\\reportForm\\sewageInterceptingWell\\realTime.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\page\\reportForm\\sewageInterceptingWell\\realTime.vue","mtime":1623033409681},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SubModule from '@/components/subModule.vue';\nimport modal from '@/components/chart/well.vue';\nimport fileDownload from 'js-file-download';\nimport { wellNames, wellMonitorPoint, wellTimeDatas, wellTimeChart } from '@/request/api';\nimport { exportWellTimeData } from '@/request/api2';\nexport default {\n  components: {\n    'sub-menu': SubModule,\n    'modal': modal\n  },\n  data: function data() {\n    return {\n      value: undefined,\n      wellList: [],\n      WellID: [],\n      wellMonitorPointList: [],\n      //WellMonitorPointID: [],\n      StartTime: '',\n      EndTime: '',\n      scrollx: '',\n      scrolly: '',\n      fieldNames: {\n        children: 'childNameList',\n        label: 'regionName',\n        value: 'id'\n      },\n      columns: [],\n      columnsDefault: [{\n        title: '序号',\n        dataIndex: 'number',\n        scopedSlots: {\n          customRender: 'number'\n        },\n        align: 'center',\n        fixed: 'left',\n        width: 50\n      }, {\n        title: '监控点名称',\n        dataIndex: 'wellName',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }, {\n        title: '监测时间',\n        dataIndex: 'monitorTimeText',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }, {\n        title: '污染物类别',\n        dataIndex: 'pollutedType',\n        align: 'center',\n        fixed: 'left',\n        width: 100\n      }],\n      loading: false,\n      data: [],\n      pagination: {\n        defaultPageSize: 20,\n        pageSize: 20,\n        showQuickJumper: true,\n        showSizeChanger: true,\n        current: 1,\n        total: 0\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // 获取截污井名称列表\n    wellNames().then(function (res) {\n      if (res.status === '0') {\n        _this.wellList = res.result;\n      } else {\n        console.log(res.message);\n      }\n    });\n    var data = {\n      PageIndex: this.pagination.current - 1,\n      PageSize: this.pagination.pageSize // 获取第一页数据\n\n    };\n    this.getFirstPage(data);\n  },\n  mounted: function mounted() {},\n  methods: {\n    wellChange: function wellChange(value) {\n      this.getWellMonitorPoint(value);\n    },\n    getWellMonitorPoint: function getWellMonitorPoint(id) {\n      wellMonitorPoint({\n        regionId: id\n      }).then(function (res) {\n        if (res.status === '0') {// this.holeList = res.result\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    DateChange: function DateChange(date, dateString) {\n      this.StartTime = dateString[0];\n      this.EndTime = dateString[1];\n    },\n    getFirstPage: function getFirstPage(data) {\n      var _this2 = this;\n\n      this.loading = true; // 获取列表表头和首页数据\n\n      this.columns = [];\n      this.columns = this.columns.concat(this.columnsDefault);\n      wellTimeDatas(data).then(function (res) {\n        if (res.status === '0') {\n          var polluteDict = res.result.list[0].polluteDict;\n          var isFixed = Object.keys(polluteDict).length > 10;\n          _this2.scrollx = isFixed ? 350 : '';\n\n          _this2.columns.forEach(function (item, index) {\n            item.fixed = isFixed;\n\n            if (index && !isFixed) {\n              item.width = '';\n            }\n          });\n\n          Object.keys(polluteDict).forEach(function (key) {\n            _this2.columns.push({\n              title: key,\n              dataIndex: key,\n              align: 'center',\n              width: isFixed ? 140 : ''\n            });\n\n            _this2.scrollx += isFixed ? 140 : '';\n          });\n\n          _this2.dataHandle(res.result, _this2.pagination);\n        } else {\n          console.log(res.message);\n          _this2.pagination.total = 0;\n        }\n\n        _this2.loading = false;\n      });\n    },\n    getData: function getData(data, pagination) {\n      var _this3 = this;\n\n      wellTimeDatas(data).then(function (res) {\n        if (res.status === '0') {\n          _this3.dataHandle(res.result, pagination);\n        } else {\n          console.log(res.message);\n        }\n\n        _this3.loading = false;\n      });\n    },\n    pageChange: function pageChange(pagination, filters, sorter) {\n      this.loading = true;\n      var data = {\n        WellID: this.WellID.constructor == Array ? '' : this.WellID,\n\n        /* WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this\n        \t.WellMonitorPointID, */\n        StartTime: this.StartTime,\n        EndTime: this.EndTime,\n        PageIndex: pagination.current - 1,\n        PageSize: pagination.pageSize\n      };\n      this.getData(data, pagination);\n    },\n    dataHandle: function dataHandle(data, pagination) {\n      data.list.forEach(function (item) {\n        item = Object.assign(item, item.polluteDict);\n      });\n      this.loading = false;\n      this.data = data.list;\n      pagination.total = data.total;\n      this.pagination = pagination;\n    },\n    search: function search() {\n      this.pagination.current = 1;\n      this.data = [];\n      var data = {\n        WellID: this.WellID.constructor == Array ? '' : this.WellID,\n\n        /* WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this\n        \t.WellMonitorPointID, */\n        StartTime: this.StartTime,\n        EndTime: this.EndTime,\n        PageIndex: this.pagination.current - 1,\n        PageSize: this.pagination.pageSize\n      };\n      this.getFirstPage(data);\n    },\n    download: function download() {\n      var params = {\n        WellID: this.WellID.constructor == Array ? '' : this.WellID,\n        //WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\n        StartTime: this.StartTime,\n        EndTime: this.EndTime\n      };\n      exportWellTimeData(params).then(function (res) {\n        var iframe = document.createElement(\"iframe\");\n        iframe.style.display = \"none\";\n        iframe.src = res.result;\n        document.body.appendChild(iframe);\n      });\n    },\n    tableHeight: function tableHeight(data) {\n      this.scrolly = data - 75;\n    },\n    customRow: function customRow(record, index) {\n      return {\n        style: {\n          backgroundColor: index % 2 ? '#fff' : '#f0f2f5'\n        }\n      };\n    },\n    chartOpen: function chartOpen() {\n      this.$refs.modal.visible = true;\n    },\n    chartData: function chartData(data) {\n      var _this4 = this;\n\n      wellTimeChart(data).then(function (res) {\n        if (res.status === '0') {\n          if (res.result.avgList && res.result.avgList.length) {\n            _this4.$refs.modal.avgData = res.result.avgList;\n            _this4.$refs.modal.avgunit = res.result.avgUnit;\n          }\n\n          if (res.result.rtdList && res.result.rtdList.length) {\n            _this4.$refs.modal.rtdData = res.result.rtdList;\n            _this4.$refs.modal.rtdunit = res.result.rtdUnit;\n          }\n\n          if (res.result.couList && res.result.couList.length) {\n            _this4.$refs.modal.couData = res.result.couList;\n            _this4.$refs.modal.couunit = res.result.couUnit;\n          }\n        } else {\n          console.log(res.message);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["realTime.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,SAAA,MAAA,4BAAA;AACA,OAAA,KAAA,MAAA,6BAAA;AACA,OAAA,YAAA,MAAA,kBAAA;AAEA,SACA,SADA,EAEA,gBAFA,EAGA,aAHA,EAIA,aAJA,QAKA,eALA;AAOA,SACA,kBADA,QAEA,gBAFA;AAMA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,gBAAA,SADA;AAEA,aAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,SADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,oBAAA,EAAA,EAJA;AAKA;AACA,MAAA,SAAA,EAAA,EANA;AAOA,MAAA,OAAA,EAAA,EAPA;AAQA,MAAA,OAAA,EAAA,EARA;AASA,MAAA,OAAA,EAAA,EATA;AAUA,MAAA,UAAA,EAAA;AACA,QAAA,QAAA,EAAA,eADA;AAEA,QAAA,KAAA,EAAA,YAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAVA;AAeA,MAAA,OAAA,EAAA,EAfA;AAgBA,MAAA,cAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,QAFA;AAGA,QAAA,WAAA,EAAA;AACA,UAAA,YAAA,EAAA;AADA,SAHA;AAMA,QAAA,KAAA,EAAA,QANA;AAOA,QAAA,KAAA,EAAA,MAPA;AAQA,QAAA,KAAA,EAAA;AARA,OAAA,EASA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,SAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,MAJA;AAKA,QAAA,KAAA,EAAA;AALA,OATA,EAgBA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,iBAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,MAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAhBA,EAsBA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,SAAA,EAAA,cAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,MAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAtBA,CAhBA;AA8CA,MAAA,OAAA,EAAA,KA9CA;AA+CA,MAAA,IAAA,EAAA,EA/CA;AAgDA,MAAA,UAAA,EAAA;AACA,QAAA,eAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,eAAA,EAAA,IAHA;AAIA,QAAA,eAAA,EAAA,IAJA;AAKA,QAAA,OAAA,EAAA,CALA;AAMA,QAAA,KAAA,EAAA;AANA;AAhDA,KAAA;AAyDA,GA/DA;AAgEA,EAAA,OAhEA,qBAgEA;AAAA;;AACA;AACA,IAAA,SAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,MAAA;AACA,OAFA,MAEA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,KANA;AAOA,QAAA,IAAA,GAAA;AACA,MAAA,SAAA,EAAA,KAAA,UAAA,CAAA,OAAA,GAAA,CADA;AAEA,MAAA,QAAA,EAAA,KAAA,UAAA,CAAA,QAFA,CAIA;;AAJA,KAAA;AAKA,SAAA,YAAA,CAAA,IAAA;AACA,GA/EA;AAgFA,EAAA,OAhFA,qBAgFA,CAAA,CAhFA;AAiFA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,KADA,EACA;AACA,WAAA,mBAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,mBAJA,+BAIA,EAJA,EAIA;AACA,MAAA,gBAAA,CAAA;AACA,QAAA,QAAA,EAAA;AADA,OAAA,CAAA,CAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,GAAA,EAAA,CACA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,OARA;AASA,KAdA;AAeA,IAAA,UAfA,sBAeA,IAfA,EAeA,UAfA,EAeA;AACA,WAAA,SAAA,GAAA,UAAA,CAAA,CAAA,CAAA;AACA,WAAA,OAAA,GAAA,UAAA,CAAA,CAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,YAnBA,wBAmBA,IAnBA,EAmBA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA,CADA,CAEA;;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,cAAA,CAAA;AACA,MAAA,aAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,cAAA,WAAA,GAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,EAAA,WAAA;AAEA,cAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA,MAAA,GAAA,EAAA;AAEA,UAAA,MAAA,CAAA,OAAA,GAAA,OAAA,GAAA,GAAA,GAAA,EAAA;;AAEA,UAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,IAAA,CAAA,KAAA,GAAA,OAAA;;AACA,gBAAA,KAAA,IAAA,CAAA,OAAA,EAAA;AACA,cAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA;AACA,WALA;;AAOA,UAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,KAAA,EAAA,GADA;AAEA,cAAA,SAAA,EAAA,GAFA;AAGA,cAAA,KAAA,EAAA,QAHA;AAIA,cAAA,KAAA,EAAA,OAAA,GAAA,GAAA,GAAA;AAJA,aAAA;;AAMA,YAAA,MAAA,CAAA,OAAA,IAAA,OAAA,GAAA,GAAA,GAAA,EAAA;AACA,WARA;;AASA,UAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,MAAA,EAAA,MAAA,CAAA,UAAA;AACA,SAxBA,MAwBA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,OAAA;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,KAAA,GAAA,CAAA;AACA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,OA9BA;AA+BA,KAvDA;AAwDA,IAAA,OAxDA,mBAwDA,IAxDA,EAwDA,UAxDA,EAwDA;AAAA;;AACA,MAAA,aAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,OAAA;AACA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAPA;AAQA,KAjEA;AAkEA,IAAA,UAlEA,sBAkEA,UAlEA,EAkEA,OAlEA,EAkEA,MAlEA,EAkEA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,MAAA,CAAA,WAAA,IAAA,KAAA,GAAA,EAAA,GAAA,KAAA,MADA;;AAEA;;AAEA,QAAA,SAAA,EAAA,KAAA,SAJA;AAKA,QAAA,OAAA,EAAA,KAAA,OALA;AAMA,QAAA,SAAA,EAAA,UAAA,CAAA,OAAA,GAAA,CANA;AAOA,QAAA,QAAA,EAAA,UAAA,CAAA;AAPA,OAAA;AAUA,WAAA,OAAA,CAAA,IAAA,EAAA,UAAA;AACA,KA/EA;AAgFA,IAAA,UAhFA,sBAgFA,IAhFA,EAgFA,UAhFA,EAgFA;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,WAAA,CAAA;AACA,OAFA;AAGA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,MAAA,UAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,WAAA,UAAA,GAAA,UAAA;AACA,KAxFA;AAyFA,IAAA,MAzFA,oBAyFA;AACA,WAAA,UAAA,CAAA,OAAA,GAAA,CAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,MAAA,CAAA,WAAA,IAAA,KAAA,GAAA,EAAA,GAAA,KAAA,MADA;;AAEA;;AAEA,QAAA,SAAA,EAAA,KAAA,SAJA;AAKA,QAAA,OAAA,EAAA,KAAA,OALA;AAMA,QAAA,SAAA,EAAA,KAAA,UAAA,CAAA,OAAA,GAAA,CANA;AAOA,QAAA,QAAA,EAAA,KAAA,UAAA,CAAA;AAPA,OAAA;AASA,WAAA,YAAA,CAAA,IAAA;AACA,KAtGA;AAwGA,IAAA,QAxGA,sBAwGA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,MAAA,CAAA,WAAA,IAAA,KAAA,GAAA,EAAA,GAAA,KAAA,MADA;AAEA;AACA,QAAA,SAAA,EAAA,KAAA,SAHA;AAIA,QAAA,OAAA,EAAA,KAAA;AAJA,OAAA;AAMA,MAAA,kBAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA,CAAA,MAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA;AACA,OALA;AAMA,KArHA;AAuHA,IAAA,WAvHA,uBAuHA,IAvHA,EAuHA;AACA,WAAA,OAAA,GAAA,IAAA,GAAA,EAAA;AACA,KAzHA;AA0HA,IAAA,SA1HA,qBA0HA,MA1HA,EA0HA,KA1HA,EA0HA;AACA,aAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,eAAA,EAAA,KAAA,GAAA,CAAA,GAAA,MAAA,GAAA;AADA;AADA,OAAA;AAKA,KAhIA;AAiIA,IAAA,SAjIA,uBAiIA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAnIA;AAoIA,IAAA,SApIA,qBAoIA,IApIA,EAoIA;AAAA;;AACA,MAAA,aAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,MAAA,CAAA,OAAA,IAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA;;AACA,cAAA,GAAA,CAAA,MAAA,CAAA,OAAA,IAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA;;AACA,cAAA,GAAA,CAAA,MAAA,CAAA,OAAA,IAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA;AACA,SAbA,MAaA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,OAjBA;AAkBA;AAvJA;AAjFA,CAAA","sourcesContent":["<template>\r\n\t<sub-menu @getHeight=\"tableHeight($event)\">\r\n\t\t<template slot=\"left\">\r\n\t\t\t<a-button type=\"primary\" @click=\"download\">导出</a-button>\r\n\t\t\t<a-button type=\"primary\" @click=\"chartOpen\">图表</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"right\">\r\n\t\t\t<a-select show-search v-model=\"WellID\" placeholder=\"监控点名称\" option-filter-prop=\"children\"\r\n\t\t\t\tstyle=\"width: 120px\" @change=\"wellChange\">\r\n\t\t\t\t<a-select-option v-for=\"item in wellList\" :value=\"item.id\" :key=\"item.id\">{{item.wellName}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-range-picker @change=\"DateChange\" />\r\n\t\t\t<a-button type=\"primary\" @click=\"search\">查询</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"table\">\r\n\t\t\t<a-table style=\"height: 100%;\" :columns=\"columns\" :data-source=\"data\" :loading=\"loading\"\r\n\t\t\t\t:scroll=\"{ x: scrollx,y: scrolly }\" :rowKey=\"record => record.id\" size=\"middle\" :pagination=\"pagination\"\r\n\t\t\t\t@change=\"pageChange\" :customRow=\"customRow\">\r\n\t\t\t\t<span slot=\"number\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t{{index + 1 }}\r\n\t\t\t\t</span>\r\n\t\t\t</a-table>\r\n\t\t</template>\r\n\t\t<template slot=\"fixed\">\r\n\t\t\t<modal ref=\"modal\" title=\"数据统计与报表/水质数据报表/实时数据报表\" :wellList=\"wellList\" rtd :getData=\"chartData\"></modal>\r\n\t\t</template>\r\n\t</sub-menu>\r\n</template>\r\n\r\n<script>\r\n\timport SubModule from '@/components/subModule.vue'\r\n\timport modal from '@/components/chart/well.vue'\r\n\timport fileDownload from 'js-file-download'\r\n\r\n\timport {\r\n\t\twellNames,\r\n\t\twellMonitorPoint,\r\n\t\twellTimeDatas,\r\n\t\twellTimeChart\r\n\t} from '@/request/api'\r\n\r\n\timport {\r\n        exportWellTimeData\r\n\t} from '@/request/api2'\r\n\r\n\r\n\r\n\texport default ({\r\n\t\tcomponents: {\r\n\t\t\t'sub-menu': SubModule,\r\n\t\t\t'modal': modal\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\twellList: [],\r\n\t\t\t\tWellID: [],\r\n\t\t\t\twellMonitorPointList: [],\r\n\t\t\t\t//WellMonitorPointID: [],\r\n\t\t\t\tStartTime: '',\r\n\t\t\t\tEndTime: '',\r\n\t\t\t\tscrollx: '',\r\n\t\t\t\tscrolly: '',\r\n\t\t\t\tfieldNames: {\r\n\t\t\t\t\tchildren: 'childNameList',\r\n\t\t\t\t\tlabel: 'regionName',\r\n\t\t\t\t\tvalue: 'id',\r\n\t\t\t\t},\r\n\t\t\t\tcolumns: [],\r\n\t\t\t\tcolumnsDefault: [{\r\n\t\t\t\t\t\ttitle: '序号',\r\n\t\t\t\t\t\tdataIndex: 'number',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'number'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 50\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '监控点名称',\r\n\t\t\t\t\t\tdataIndex: 'wellName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '监测时间',\r\n\t\t\t\t\t\tdataIndex: 'monitorTimeText',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '污染物类别',\r\n\t\t\t\t\t\tdataIndex: 'pollutedType',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\twidth: 100\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tdefaultPageSize: 20,\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tshowQuickJumper: true,\r\n\t\t\t\t\tshowSizeChanger: true,\r\n\t\t\t\t\tcurrent: 1,\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// 获取截污井名称列表\r\n\t\t\twellNames().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tthis.wellList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet data = {\r\n\t\t\t\tPageIndex: this.pagination.current - 1,\r\n\t\t\t\tPageSize: this.pagination.pageSize\r\n\t\t\t}\r\n\t\t\t// 获取第一页数据\r\n\t\t\tthis.getFirstPage(data)\r\n\t\t},\r\n\t\tmounted() {},\r\n\t\tmethods: {\r\n\t\t\twellChange(value) {\r\n\t\t\t\tthis.getWellMonitorPoint(value)\r\n\t\t\t},\r\n\t\t\tgetWellMonitorPoint(id) {\r\n\t\t\t\twellMonitorPoint({\r\n\t\t\t\t\tregionId: id\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\t// this.holeList = res.result\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tDateChange(date, dateString) {\r\n\t\t\t\tthis.StartTime = dateString[0]\r\n\t\t\t\tthis.EndTime = dateString[1]\r\n\t\t\t},\r\n\t\t\tgetFirstPage(data) {\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\t// 获取列表表头和首页数据\r\n\t\t\t\tthis.columns = []\r\n\t\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\r\n\t\t\t\twellTimeDatas(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconst polluteDict = res.result.list[0].polluteDict\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst isFixed = Object.keys(polluteDict).length > 10\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.scrollx = isFixed ? 350 : ''\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.columns.forEach((item,index)=>{\r\n\t\t\t\t\t\t\titem.fixed = isFixed\r\n\t\t\t\t\t\t\tif (index && !isFixed) {\r\n\t\t\t\t\t\t\t\titem.width = ''\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tObject.keys(polluteDict).forEach(key => {\r\n\t\t\t\t\t\t\tthis.columns.push({\r\n\t\t\t\t\t\t\t\ttitle: key,\r\n\t\t\t\t\t\t\t\tdataIndex: key,\r\n\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t\twidth: isFixed ? 140 : ''\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.scrollx += isFixed ? 140 : ''\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t\tthis.pagination.total = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetData(data, pagination) {\r\n\t\t\t\twellTimeDatas(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.dataHandle(res.result, pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpageChange(pagination, filters, sorter) {\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\t/* WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this\r\n\t\t\t\t\t\t.WellMonitorPointID, */\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t\tPageIndex: pagination.current - 1,\r\n\t\t\t\t\tPageSize: pagination.pageSize\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getData(data, pagination)\r\n\t\t\t},\r\n\t\t\tdataHandle(data, pagination) {\r\n\t\t\t\tdata.list.forEach(item => {\r\n\t\t\t\t\titem = Object.assign(item, item.polluteDict)\r\n\t\t\t\t})\r\n\t\t\t\tthis.loading = false\r\n\t\t\t\tthis.data = data.list\r\n\t\t\t\tpagination.total = data.total\r\n\t\t\t\tthis.pagination = pagination\r\n\t\t\t},\r\n\t\t\tsearch() {\r\n\t\t\t\tthis.pagination.current = 1\r\n\t\t\t\tthis.data = []\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\t/* WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this\r\n\t\t\t\t\t\t.WellMonitorPointID, */\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t\tPageIndex: this.pagination.current - 1,\r\n\t\t\t\t\tPageSize: this.pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\tthis.getFirstPage(data)\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tdownload() {\r\n\t\t\t\tlet params = {\r\n\t\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\t//WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t}\r\n\t\t\t\texportWellTimeData(params).then(res => {\r\n                    var iframe =document.createElement(\"iframe\")\r\n                    iframe.style.display =\"none\";\r\n                    iframe.src = res.result;\r\n                    document.body.appendChild(iframe);\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttableHeight(data) {\r\n\t\t\t\tthis.scrolly = data - 75\r\n\t\t\t},\r\n\t\t\tcustomRow(record, index){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tbackgroundColor: index % 2 ? '#fff' : '#f0f2f5'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tchartOpen() {\r\n\t\t\t\tthis.$refs.modal.visible = true\r\n\t\t\t},\r\n\t\t\tchartData(data) {\r\n\t\t\t\twellTimeChart(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tif (res.result.avgList && res.result.avgList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.avgData = res.result.avgList\r\n\t\t\t\t\t\t\tthis.$refs.modal.avgunit = res.result.avgUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( res.result.rtdList && res.result.rtdList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.rtdData = res.result.rtdList\r\n\t\t\t\t\t\t\tthis.$refs.modal.rtdunit = res.result.rtdUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (res.result.couList && res.result.couList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.couData = res.result.couList\r\n\t\t\t\t\t\t\tthis.$refs.modal.couunit = res.result.couUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/page/reportForm/sewageInterceptingWell"}]}