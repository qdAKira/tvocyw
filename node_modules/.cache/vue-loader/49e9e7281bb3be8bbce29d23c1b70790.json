{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\yangkou-balance-management-system\\src\\page\\reportForm\\enterprise\\realTime.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\page\\reportForm\\enterprise\\realTime.vue","mtime":1615183728866},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SubModule from '@/components/subModule.vue'\nimport chart from '@/components/chart/enterprise/realTime.vue'\nimport fileDownload from 'js-file-download'\n\nimport {\n\ttimeDatas,\n\tgetCompanyList,\n\tgetIndustryType,\n\tgetHoleNames,\n\tgetPollutedLevel,\n\trealTimeChart,\n\tgetFactor\n} from '@/request/api'\n\n\nexport default ({\n\tcomponents: {\n\t\t'sub-menu': SubModule,\n\t\t'chart': chart\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tregionData: global.addDegoins,\n\t\t\tRegionID: null,\n\t\t\tregionID: global.regionID,\n\t\t\tcompanyList: [],\n\t\t\tCompanyID: [],\n\t\t\tholeList: [],\n\t\t\tCompanyHoleID: [],\n\t\t\tindustryTypeList: [],\n\t\t\tIndustryTypeID: [],\n\t\t\tpollutedLevelList: [],\n\t\t\tPollutedLevelID: [],\n\t\t\tStartTime: '',\n\t\t\tEndTime: '',\n\t\t\tscrollx: '',\n\t\t\tscrolly: '',\n\t\t\tfieldNames: {\n\t\t\t\tchildren: 'child',\n\t\t\t\tlabel: 'name',\n\t\t\t\tvalue: 'id',\n\t\t\t},\n\t\t\tcolumns: [],\n\t\t\tcolumnsDefault: [{\n\t\t\t\t\ttitle: '序号',\n\t\t\t\t\tdataIndex: 'number',\n\t\t\t\t\tscopedSlots: {\n\t\t\t\t\t\tcustomRender: 'number'\n\t\t\t\t\t},\n\t\t\t\t\talign: 'center',\n\t\t\t\t\t// fixed: 'left',\n\t\t\t\t\twidth: 50\n\t\t\t\t}, {\n\t\t\t\t\ttitle: '企业名称',\n\t\t\t\t\tdataIndex: 'companyName',\n\t\t\t\t\talign: 'center',\n\t\t\t\t\t// fixed: 'left',\n\t\t\t\t\t// width: 100\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: '排口名称',\n\t\t\t\t\tdataIndex: 'holeName',\n\t\t\t\t\talign: 'center',\n\t\t\t\t\t// fixed: 'left',\n\t\t\t\t\t// width: 100\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: '监测时间',\n\t\t\t\t\tdataIndex: 'monitorTimeText',\n\t\t\t\t\talign: 'center',\n\t\t\t\t\t// fixed: 'left',\n\t\t\t\t\t// width: 100\n\t\t\t\t}, {\n\t\t\t\t\ttitle: '污染物类别',\n\t\t\t\t\tdataIndex: 'pollutedType',\n\t\t\t\t\talign: 'center',\n\t\t\t\t\t// fixed: 'left',\n\t\t\t\t\t// width: 100\n\t\t\t\t}\n\t\t\t],\n\t\t\tloading: false,\n\t\t\tdata: [],\n\t\t\tparameter: {},\n\t\t\tpagination: {\n\t\t\t\tdefaultPageSize: 20,\n\t\t\t\tpageSize: 20,\n\t\t\t\tshowQuickJumper: true,\n\t\t\t\tshowSizeChanger: true,\n\t\t\t\tcurrent: 1,\n\t\t\t\ttotal: 0\n\t\t\t},\n\t\t\tchartVisble: true,\n\t\t\tchartType: 1,\n\t\t\tcompanyList2: [],\n\t\t\tCompanyID2: [],\n\t\t\tfactorList: [],\n\t\t\tFactorID: [],\n\t\t\tStartTime2: '',\n\t\t\tEndTime2: '',\n\t\t};\n\t},\n\tcreated() {\n\t\t// 获取企业列表\n\t\tthis.getCompany()\n\t\t// 获取行业类别\n\t\tgetIndustryType().then(res => {\n\t\t\tif (res.status === '0') {\n\t\t\t\tconsole.log(res.result)\n\t\t\t\tthis.industryTypeList = res.result\n\t\t\t} else {\n\t\t\t\tconsole.log(res.message)\n\t\t\t}\n\t\t})\n\t\t// 获取污染物等级\n\t\tgetPollutedLevel().then(res => {\n\t\t\tif (res.status === '0') {\n\t\t\t\tconsole.log(res.result)\n\t\t\t\tthis.pollutedLevelList = res.result\n\t\t\t} else {\n\t\t\t\tconsole.log(res.message)\n\t\t\t}\n\t\t})\n\t\tlet data = {\n\t\t\tPageIndex: this.pagination.current - 1,\n\t\t\tPageSize: this.pagination.pageSize,\n\t\t\tRegionID: this.regionID\n\t\t}\n\t\tthis.getFirstPage(data)\n\t\tthis.getChartData()\n\t\t\n\t\tgetFactor().then(res => {\n\t\t\tif (res.status === '0') {\n\t\t\t\tconsole.log(res.result)\n\t\t\t\tthis.factorList = res.result\n\t\t\t} else {\n\t\t\t\tconsole.log(res.message)\n\t\t\t}\n\t\t})\n\t},\n\tmounted() {},\n\tmethods: {\n\t\tregionChange(value) {\n\t\t\tthis.RegionID = value[value.length - 1]\n\t\t\tthis.companyList = []\n\t\t\tthis.CompanyID = []\n\t\t},\n\t\t// 获取企业列表方法\n\t\tgetCompany() {\n\t\t\tgetCompanyList({\n\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\n\t\t\t}).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tthis.companyList = res.result\n\t\t\t\t\tconsole.log(this.companyList)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\t// 获取排口列表\n\t\tgetHole(id) {\n\t\t\tgetHoleNames({\n\t\t\t\tcompanyId: id\n\t\t\t}).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tconsole.log(res.result)\n\t\t\t\t\tthis.holeList = res.result\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tcompanyFocus() {\n\t\t\tthis.getCompany()\n\t\t},\n\t\tcompanyChange(value) {\n\t\t\tthis.CompanyHoleID = []\n\t\t\tthis.getHole(value)\n\t\t},\n\t\tgetFirstPage(data) {\n\t\t\tconsole.log(data)\n\t\t\tthis.loading = true\n\t\t\t// 获取列表表头和首页数据\n\t\t\tthis.columns = []\n\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\n\t\t\ttimeDatas(data).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\t// this.scrollx = 350\n\t\t\t\t\tconst polluteDict = res.result.list[0].polluteDict\n\t\t\t\t\tObject.keys(polluteDict).forEach(key => {\n\t\t\t\t\t\tthis.columns.push({\n\t\t\t\t\t\t\ttitle: key,\n\t\t\t\t\t\t\tdataIndex: key,\n\t\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\t\t// width: 140\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// this.scrollx += 140\n\t\t\t\t\t});\n\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t\tthis.pagination.total = 0\n\t\t\t\t}\n\t\t\t\tthis.loading = false\n\t\t\t})\n\t\t},\n\t\tgetData(data, pagination) {\n\t\t\tconsole.log(data)\n\t\t\ttimeDatas(data).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tthis.dataHandle(res.result, pagination)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t\tthis.loading = false\n\t\t\t})\n\t\t},\n\t\tpageChange(pagination, filters, sorter) {\n\t\t\tthis.loading = true\n\t\t\tlet data = {\n\t\t\t\tRegionID: this.RegionID ? this.RegionID : this.regionID,\n\t\t\t\tCompanyID: this.CompanyID.constructor == Array ? '' : this.CompanyID,\n\t\t\t\tCompanyHoleID: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\n\t\t\t\tPollutedLevelID: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\n\t\t\t\tIndustryTypeID: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\n\t\t\t\tStartTime: this.StartTime,\n\t\t\t\tEndTime: this.EndTime,\n\t\t\t\tPageIndex: pagination.current - 1,\n\t\t\t\tPageSize: pagination.pageSize\n\t\t\t}\n\n\t\t\tthis.getData(data, pagination)\n\t\t},\n\t\tdataHandle(data, pagination) {\n\t\t\tconsole.log(pagination)\n\t\t\tdata.list.forEach(item => {\n\t\t\t\titem = Object.assign(item, item.polluteDict)\n\t\t\t})\n\t\t\tthis.loading = false\n\t\t\tthis.data = data.list\n\t\t\tconsole.log(this.data)\n\t\t\tpagination.total = data.total\n\t\t\tthis.pagination = pagination\n\t\t},\n\t\tDateChange(date, dateString) {\n\t\t\tconsole.log(date, dateString)\n\t\t\tthis.StartTime = dateString[0]\n\t\t\tthis.EndTime = dateString[1]\n\t\t},\n\t\tdataSearch() {\n\t\t\tthis.pagination.current = 1\n\t\t\tthis.data = []\n\t\t\tlet data = {\n\t\t\t\tRegionID: this.RegionID ? this.RegionID : this.regionID,\n\t\t\t\tCompanyID: this.CompanyID.constructor == Array ? '' : this.CompanyID,\n\t\t\t\tCompanyHoleID: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\n\t\t\t\tPollutedLevelID: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\n\t\t\t\tIndustryTypeID: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\n\t\t\t\tStartTime: this.StartTime,\n\t\t\t\tEndTime: this.EndTime,\n\t\t\t\tPageIndex: this.pagination.current - 1,\n\t\t\t\tPageSize: this.pagination.pageSize\n\t\t\t}\n\t\t\tthis.getFirstPage(data)\n\t\t},\n\t\ttableHeight(data) {\n\t\t\tthis.scrolly = data - 75\n\t\t},\n\t\tgetChartData() {\n\t\t\tconst data = {\n\t\t\t\tCompanyID: 2,\n\t\t\t\tRegionID: 4,\n\t\t\t\tFactorID: 1,\n\t\t\t\tStartTime: \"2020-11-13 00:00:15\",\n\t\t\t\tEndTime: \"2020-11-13 02:35:36\"\n\t\t\t}\n\t\t\tconsole.log(data)\n\t\t\trealTimeChart(data).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tconsole.log(res)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tchartOnChange(e) {\n\t\t\tconsole.log(e)\n\t\t},\n\t\tregionChange2(value){\n\t\t\tthis.RegionID = value[value.length - 1]\n\t\t\tthis.companyList = []\n\t\t\tthis.CompanyID = []\n\t\t\tgetCompanyList({\n\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\n\t\t\t}).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tthis.companyList2 = res.result\n\t\t\t\t\tconsole.log(this.companyList)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tDateChange2(date, dateString) {\n\t\t\tconsole.log(date, dateString)\n\t\t\tthis.StartTime2 = dateString[0]\n\t\t\tthis.EndTime2 = dateString[1]\n\t\t},\n\t\tchartSearch(){\n\t\t\tlet data = {\n\t\t\t\tRegionID: this.RegionID ? this.RegionID : this.regionID,\n\t\t\t\tCompanyID: this.CompanyID2.constructor == Array ? '' : this.CompanyID2,\n\t\t\t\tFactorID: this.FactorID.constructor == Array ? '' : this.FactorID,\n\t\t\t\tStartTime: this.StartTime2,\n\t\t\t\tEndTime: this.EndTime2,\n\t\t\t}\n\t\t\tconsole.log(data)\n\t\t}\n\t}\n})\n",{"version":3,"sources":["realTime.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"realTime.vue","sourceRoot":"src/page/reportForm/enterprise","sourcesContent":["<template>\r\n\t<sub-menu @getHeight=\"tableHeight($event)\">\r\n\t\t<template slot=\"left\">\r\n\t\t\t<a-button type=\"primary\">新建</a-button>\r\n\t\t\t<a-button type=\"primary\">导入</a-button>\r\n\t\t\t<a-button type=\"primary\">图表</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"right\">\r\n\t\t\t<a-cascader :options=\"regionData\" :fieldNames=\"fieldNames\" placeholder=\"行政区区域\" style=\"width: 150px\"\r\n\t\t\t\tchange-on-select @change=\"regionChange\" />\r\n\t\t\t<a-select show-search v-model=\"CompanyID\" placeholder=\"企业\" option-filter-prop=\"children\"\r\n\t\t\t\tstyle=\"width: 150px\" @focus=\"companyFocus\" @change=\"companyChange\">\r\n\t\t\t\t<a-select-option v-for=\"item in companyList\" :value=\"item.id\" :key=\"item.id\">{{item.companyName}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"CompanyHoleID\" placeholder=\"排口名称\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in holeList\" :value=\"item.id\" :key=\"item.id\">{{item.holeName}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"IndustryTypeID\" placeholder=\"行业类别\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in industryTypeList\" :value=\"item.id\" :key=\"item.id\">{{item.name}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-select v-model=\"PollutedLevelID\" placeholder=\"污染物等级\" style=\"width: 120px\">\r\n\t\t\t\t<a-select-option v-for=\"item in pollutedLevelList\" :value=\"item.id\" :key=\"item.id\">{{item.name}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-range-picker @change=\"DateChange\" />\r\n\t\t\t<a-button type=\"primary\" @click=\"dataSearch\">查询</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"table\">\r\n\t\t\t<chart></chart>\r\n\t\t\t<a-table style=\"height: 100%;\" :columns=\"columns\" :data-source=\"data\" :loading=\"loading\"\r\n\t\t\t\t:scroll=\"{ x: scrollx,y: scrolly }\" :rowKey=\"record => record.id\" size=\"middle\" :pagination=\"pagination\"\r\n\t\t\t\t@change=\"pageChange\">\r\n\t\t\t\t<span slot=\"number\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t{{index + 1 }}\r\n\t\t\t\t</span>\r\n\t\t\t</a-table>\r\n\t\t</template>\r\n\t\t<template slot=\"fixed\">\r\n\t\t\t<a-modal forceRender :maskClosable=\"false\" title=\"数据统计与报表/日数据报表\" :visible=\"chartVisble\" :width=\"1200\" :footer=\"null\"\r\n\t\t\t\tcentered @cancel=\"chartVisble = false\">\r\n\t\t\t\t<div class=\"charts-header\">\r\n\t\t\t\t\t<a-row type=\"flex\">\r\n\t\t\t\t\t\t<a-col flex=\"200px\" style=\"line-height: 32px;\">\r\n\t\t\t\t\t\t\t<a-radio-group v-model=\"chartType\" @change=\"chartOnChange(chartType)\">\r\n\t\t\t\t\t\t\t\t<a-radio :value=\"1\">\r\n\t\t\t\t\t\t\t\t\t折线图\r\n\t\t\t\t\t\t\t\t</a-radio>\r\n\t\t\t\t\t\t\t\t<a-radio :value=\"2\">\r\n\t\t\t\t\t\t\t\t\t柱状图\r\n\t\t\t\t\t\t\t\t</a-radio>\r\n\t\t\t\t\t\t\t</a-radio-group>\r\n\t\t\t\t\t\t</a-col>\r\n\t\t\t\t\t\t<a-col flex=\"auto\" style=\"text-align: right;\">\r\n\t\t\t\t\t\t\t<a-space style=\"text-align: left;\">\r\n\t\t\t\t\t\t\t\t<a-cascader :options=\"regionData\" :fieldNames=\"fieldNames\" placeholder=\"行政区区域\"\r\n\t\t\t\t\t\t\t\t\tstyle=\"width: 150px\" change-on-select @change=\"regionChange2\" />\r\n\t\t\t\t\t\t\t\t<a-select show-search v-model=\"CompanyID2\" placeholder=\"企业\" option-filter-prop=\"children\"\r\n\t\t\t\t\t\t\t\t\tstyle=\"width: 150px\" @change=\"companyChange\">\r\n\t\t\t\t\t\t\t\t\t<a-select-option v-for=\"item in companyList2\" :value=\"item.id\" :key=\"item.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{item.companyName}}\r\n\t\t\t\t\t\t\t\t\t</a-select-option>\r\n\t\t\t\t\t\t\t\t</a-select>\r\n\t\t\t\t\t\t\t\t<a-select v-model=\"FactorID\" placeholder=\"污染物因子\" style=\"width: 120px\">\r\n\t\t\t\t\t\t\t\t\t<a-select-option v-for=\"item in factorList\" :value=\"item.id\" :key=\"item.id\">{{item.name}}\r\n\t\t\t\t\t\t\t\t\t</a-select-option>\r\n\t\t\t\t\t\t\t\t</a-select>\r\n\t\t\t\t\t\t\t\t<a-range-picker @change=\"DateChange2\" />\r\n\t\t\t\t\t\t\t\t<a-button type=\"primary\" @click=\"chartSearch\">查询</a-button>\r\n\t\t\t\t\t\t\t</a-space>\r\n\t\t\t\t\t\t</a-col>\r\n\t\t\t\t\t</a-row>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"charts-warp\">\r\n\t\t\t\t\t<chart></chart>\r\n\t\t\t\t</div>\r\n\t\t\t</a-modal>\r\n\t\t</template>\r\n\t</sub-menu>\r\n</template>\r\n\r\n<script>\r\n\timport SubModule from '@/components/subModule.vue'\r\n\timport chart from '@/components/chart/enterprise/realTime.vue'\r\n\timport fileDownload from 'js-file-download'\r\n\r\n\timport {\r\n\t\ttimeDatas,\r\n\t\tgetCompanyList,\r\n\t\tgetIndustryType,\r\n\t\tgetHoleNames,\r\n\t\tgetPollutedLevel,\r\n\t\trealTimeChart,\r\n\t\tgetFactor\r\n\t} from '@/request/api'\r\n\r\n\r\n\texport default ({\r\n\t\tcomponents: {\r\n\t\t\t'sub-menu': SubModule,\r\n\t\t\t'chart': chart\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tregionData: global.addDegoins,\r\n\t\t\t\tRegionID: null,\r\n\t\t\t\tregionID: global.regionID,\r\n\t\t\t\tcompanyList: [],\r\n\t\t\t\tCompanyID: [],\r\n\t\t\t\tholeList: [],\r\n\t\t\t\tCompanyHoleID: [],\r\n\t\t\t\tindustryTypeList: [],\r\n\t\t\t\tIndustryTypeID: [],\r\n\t\t\t\tpollutedLevelList: [],\r\n\t\t\t\tPollutedLevelID: [],\r\n\t\t\t\tStartTime: '',\r\n\t\t\t\tEndTime: '',\r\n\t\t\t\tscrollx: '',\r\n\t\t\t\tscrolly: '',\r\n\t\t\t\tfieldNames: {\r\n\t\t\t\t\tchildren: 'child',\r\n\t\t\t\t\tlabel: 'name',\r\n\t\t\t\t\tvalue: 'id',\r\n\t\t\t\t},\r\n\t\t\t\tcolumns: [],\r\n\t\t\t\tcolumnsDefault: [{\r\n\t\t\t\t\t\ttitle: '序号',\r\n\t\t\t\t\t\tdataIndex: 'number',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'number'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t// fixed: 'left',\r\n\t\t\t\t\t\twidth: 50\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '企业名称',\r\n\t\t\t\t\t\tdataIndex: 'companyName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t// fixed: 'left',\r\n\t\t\t\t\t\t// width: 100\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '排口名称',\r\n\t\t\t\t\t\tdataIndex: 'holeName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t// fixed: 'left',\r\n\t\t\t\t\t\t// width: 100\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '监测时间',\r\n\t\t\t\t\t\tdataIndex: 'monitorTimeText',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t// fixed: 'left',\r\n\t\t\t\t\t\t// width: 100\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '污染物类别',\r\n\t\t\t\t\t\tdataIndex: 'pollutedType',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t// fixed: 'left',\r\n\t\t\t\t\t\t// width: 100\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tparameter: {},\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tdefaultPageSize: 20,\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tshowQuickJumper: true,\r\n\t\t\t\t\tshowSizeChanger: true,\r\n\t\t\t\t\tcurrent: 1,\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t},\r\n\t\t\t\tchartVisble: true,\r\n\t\t\t\tchartType: 1,\r\n\t\t\t\tcompanyList2: [],\r\n\t\t\t\tCompanyID2: [],\r\n\t\t\t\tfactorList: [],\r\n\t\t\t\tFactorID: [],\r\n\t\t\t\tStartTime2: '',\r\n\t\t\t\tEndTime2: '',\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// 获取企业列表\r\n\t\t\tthis.getCompany()\r\n\t\t\t// 获取行业类别\r\n\t\t\tgetIndustryType().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\tthis.industryTypeList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// 获取污染物等级\r\n\t\t\tgetPollutedLevel().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\tthis.pollutedLevelList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet data = {\r\n\t\t\t\tPageIndex: this.pagination.current - 1,\r\n\t\t\t\tPageSize: this.pagination.pageSize,\r\n\t\t\t\tRegionID: this.regionID\r\n\t\t\t}\r\n\t\t\tthis.getFirstPage(data)\r\n\t\t\tthis.getChartData()\r\n\t\t\t\r\n\t\t\tgetFactor().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\tthis.factorList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tmounted() {},\r\n\t\tmethods: {\r\n\t\t\tregionChange(value) {\r\n\t\t\t\tthis.RegionID = value[value.length - 1]\r\n\t\t\t\tthis.companyList = []\r\n\t\t\t\tthis.CompanyID = []\r\n\t\t\t},\r\n\t\t\t// 获取企业列表方法\r\n\t\t\tgetCompany() {\r\n\t\t\t\tgetCompanyList({\r\n\t\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.companyList = res.result\r\n\t\t\t\t\t\tconsole.log(this.companyList)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 获取排口列表\r\n\t\t\tgetHole(id) {\r\n\t\t\t\tgetHoleNames({\r\n\t\t\t\t\tcompanyId: id\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\t\tthis.holeList = res.result\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tcompanyFocus() {\r\n\t\t\t\tthis.getCompany()\r\n\t\t\t},\r\n\t\t\tcompanyChange(value) {\r\n\t\t\t\tthis.CompanyHoleID = []\r\n\t\t\t\tthis.getHole(value)\r\n\t\t\t},\r\n\t\t\tgetFirstPage(data) {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\t// 获取列表表头和首页数据\r\n\t\t\t\tthis.columns = []\r\n\t\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\r\n\t\t\t\ttimeDatas(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\t// this.scrollx = 350\r\n\t\t\t\t\t\tconst polluteDict = res.result.list[0].polluteDict\r\n\t\t\t\t\t\tObject.keys(polluteDict).forEach(key => {\r\n\t\t\t\t\t\t\tthis.columns.push({\r\n\t\t\t\t\t\t\t\ttitle: key,\r\n\t\t\t\t\t\t\t\tdataIndex: key,\r\n\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t\t// width: 140\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t// this.scrollx += 140\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t\tthis.pagination.total = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetData(data, pagination) {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\ttimeDatas(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.dataHandle(res.result, pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpageChange(pagination, filters, sorter) {\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tRegionID: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t\tCompanyID: this.CompanyID.constructor == Array ? '' : this.CompanyID,\r\n\t\t\t\t\tCompanyHoleID: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\r\n\t\t\t\t\tPollutedLevelID: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\r\n\t\t\t\t\tIndustryTypeID: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t\tPageIndex: pagination.current - 1,\r\n\t\t\t\t\tPageSize: pagination.pageSize\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getData(data, pagination)\r\n\t\t\t},\r\n\t\t\tdataHandle(data, pagination) {\r\n\t\t\t\tconsole.log(pagination)\r\n\t\t\t\tdata.list.forEach(item => {\r\n\t\t\t\t\titem = Object.assign(item, item.polluteDict)\r\n\t\t\t\t})\r\n\t\t\t\tthis.loading = false\r\n\t\t\t\tthis.data = data.list\r\n\t\t\t\tconsole.log(this.data)\r\n\t\t\t\tpagination.total = data.total\r\n\t\t\t\tthis.pagination = pagination\r\n\t\t\t},\r\n\t\t\tDateChange(date, dateString) {\r\n\t\t\t\tconsole.log(date, dateString)\r\n\t\t\t\tthis.StartTime = dateString[0]\r\n\t\t\t\tthis.EndTime = dateString[1]\r\n\t\t\t},\r\n\t\t\tdataSearch() {\r\n\t\t\t\tthis.pagination.current = 1\r\n\t\t\t\tthis.data = []\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tRegionID: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t\tCompanyID: this.CompanyID.constructor == Array ? '' : this.CompanyID,\r\n\t\t\t\t\tCompanyHoleID: this.CompanyHoleID.constructor == Array ? '' : this.CompanyHoleID,\r\n\t\t\t\t\tPollutedLevelID: this.PollutedLevelID.constructor == Array ? '' : this.PollutedLevelID,\r\n\t\t\t\t\tIndustryTypeID: this.IndustryTypeID.constructor == Array ? '' : this.IndustryTypeID,\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t\tPageIndex: this.pagination.current - 1,\r\n\t\t\t\t\tPageSize: this.pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\tthis.getFirstPage(data)\r\n\t\t\t},\r\n\t\t\ttableHeight(data) {\r\n\t\t\t\tthis.scrolly = data - 75\r\n\t\t\t},\r\n\t\t\tgetChartData() {\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\tCompanyID: 2,\r\n\t\t\t\t\tRegionID: 4,\r\n\t\t\t\t\tFactorID: 1,\r\n\t\t\t\t\tStartTime: \"2020-11-13 00:00:15\",\r\n\t\t\t\t\tEndTime: \"2020-11-13 02:35:36\"\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\trealTimeChart(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tchartOnChange(e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t},\r\n\t\t\tregionChange2(value){\r\n\t\t\t\tthis.RegionID = value[value.length - 1]\r\n\t\t\t\tthis.companyList = []\r\n\t\t\t\tthis.CompanyID = []\r\n\t\t\t\tgetCompanyList({\r\n\t\t\t\t\tregionId: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.companyList2 = res.result\r\n\t\t\t\t\t\tconsole.log(this.companyList)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tDateChange2(date, dateString) {\r\n\t\t\t\tconsole.log(date, dateString)\r\n\t\t\t\tthis.StartTime2 = dateString[0]\r\n\t\t\t\tthis.EndTime2 = dateString[1]\r\n\t\t\t},\r\n\t\t\tchartSearch(){\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\tRegionID: this.RegionID ? this.RegionID : this.regionID,\r\n\t\t\t\t\tCompanyID: this.CompanyID2.constructor == Array ? '' : this.CompanyID2,\r\n\t\t\t\t\tFactorID: this.FactorID.constructor == Array ? '' : this.FactorID,\r\n\t\t\t\t\tStartTime: this.StartTime2,\r\n\t\t\t\t\tEndTime: this.EndTime2,\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<style scoped>\r\n</style>\n"]}]}