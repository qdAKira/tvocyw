{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\yangkou-balance-management-system\\src\\page\\monitor\\data\\sewage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\page\\monitor\\data\\sewage.vue","mtime":1623032021669},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SubModule from '@/components/subModule.vue'\nimport modal from '@/components/chart/well.vue'\nimport fileDownload from 'js-file-download'\n\nimport {\n\twellNames,\n\twellMonitorPoint,\n\twellTimeDatas,\n\twellTimeChart,\n\twellMonitor\n} from '@/request/api'\n\nimport {\n\texportWellTimeData\n} from '@/request/api2'\n\n\n\nexport default ({\n\tcomponents: {\n\t\t'sub-menu': SubModule,\n\t\t'modal': modal\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tvalue: undefined,\n\t\t\twellList: [],\n\t\t\tWellID: [],\n\t\t\twellMonitorPointList: [],\n\t\t\t//WellMonitorPointID: [],\n\t\t\tStartTime: '',\n\t\t\tEndTime: '',\n\t\t\tscrollx: '',\n\t\t\tscrolly: '',\n\t\t\tfieldNames: {\n\t\t\t\tchildren: 'childNameList',\n\t\t\t\tlabel: 'regionName',\n\t\t\t\tvalue: 'id',\n\t\t\t},\n\t\t\tcolumns: [],\n\t\t\tcolumnsDefault: [{\n\t\t\t\t\ttitle: '序号',\n\t\t\t\t\tdataIndex: 'number',\n\t\t\t\t\tscopedSlots: {\n\t\t\t\t\t\tcustomRender: 'number'\n\t\t\t\t\t},\n\t\t\t\t\twidth: 50,\n\t\t\t\t\talign: 'center',\n\t\t\t\t}, {\n\t\t\t\t\ttitle: '监控点名称',\n\t\t\t\t\tdataIndex: 'wellName',\n\t\t\t\t\talign: 'center',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: '监测时间',\n\t\t\t\t\tdataIndex: 'monitorTimeText',\n\t\t\t\t\talign: 'center',\n\t\t\t\t}, {\n\t\t\t\t\ttitle: '在线状态',\n\t\t\t\t\tdataIndex: 'onlineStatus',\n\t\t\t\t\talign: 'center',\n\t\t\t\t}\n\t\t\t],\n\t\t\tloading: false,\n\t\t\tdata: [],\n\t\t\tpagination: {\n\t\t\t\tdefaultPageSize: 20,\n\t\t\t\tpageSize: 20,\n\t\t\t\tshowQuickJumper: true,\n\t\t\t\tshowSizeChanger: true,\n\t\t\t\tcurrent: 1,\n\t\t\t\ttotal: 0\n\t\t\t}\n\t\t};\n\t},\n\tcreated() {\n\t\t// 获取截污井名称列表\n\t\twellNames().then(res => {\n\t\t\tif (res.status === '0') {\n\t\t\t\tthis.wellList = res.result\n\t\t\t} else {\n\t\t\t\tconsole.log(res.message)\n\t\t\t}\n\t\t})\n\t\tlet data = {\n\t\t\tpageIndex: this.pagination.current - 1,\n\t\t\tpageSize: this.pagination.pageSize\n\t\t}\n\t\t// 获取第一页数据\n\t\tthis.getFirstPage(data)\n\t},\n\tmounted() {},\n\tmethods: {\n\t\twellChange(value) {\n\t\t\tthis.getWellMonitorPoint(value)\n\t\t},\n\t\tgetWellMonitorPoint(id) {\n\t\t\twellMonitorPoint({\n\t\t\t\tregionId: id\n\t\t\t}).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\t// this.holeList = res.result\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tDateChange(date, dateString) {\n\t\t\tthis.StartTime = dateString[0]\n\t\t\tthis.EndTime = dateString[1]\n\t\t},\n\t\tgetFirstPage(data) {\n\t\t\tthis.loading = true\n\t\t\t// 获取列表表头和首页数据\n\t\t\tthis.columns = []\n\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\n\t\t\twellMonitor(data).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tconst factors = res.result.list[0].factors\n\t\t\t\t\t\n\t\t\t\t\tfactors.forEach((item,index) => {\n\t\t\t\t\t\tthis.columns.push({\n\t\t\t\t\t\t\ttitle: item.factorName,\n\t\t\t\t\t\t\tdataIndex: 'factors' + (index + 1),\n\t\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\n\t\t\t\t\t// const isFixed = Object.keys(polluteDict).length > 10\n\n\t\t\t\t\t// this.scrollx = isFixed ? 350 : ''\n\n\t\t\t\t\t// this.columns.forEach((item,index)=>{\n\t\t\t\t\t// \titem.fixed = isFixed\n\t\t\t\t\t// \tif (index && !isFixed) {\n\t\t\t\t\t// \t\titem.width = ''\n\t\t\t\t\t// \t}\n\t\t\t\t\t// })\n\n\t\t\t\t\t// Object.keys(polluteDict).forEach(key => {\n\t\t\t\t\t// \tthis.columns.push({\n\t\t\t\t\t// \t\ttitle: key,\n\t\t\t\t\t// \t\tdataIndex: key,\n\t\t\t\t\t// \t\talign: 'center',\n\t\t\t\t\t// \t\twidth: isFixed ? 140 : ''\n\t\t\t\t\t// \t})\n\t\t\t\t\t// \tthis.scrollx += isFixed ? 140 : ''\n\t\t\t\t\t// });\n\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t\tthis.pagination.total = 0\n\t\t\t\t}\n\t\t\t\tthis.loading = false\n\t\t\t})\n\t\t},\n\t\tgetData(data, pagination) {\n\t\t\twellMonitor(data).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tthis.dataHandle(res.result, pagination)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t\tthis.loading = false\n\t\t\t})\n\t\t},\n\t\tpageChange(pagination, filters, sorter) {\n\t\t\tthis.loading = true\n\t\t\tlet data = {\n\t\t\t\twellId: this.WellID.constructor == Array ? '' : this.WellID,\n\t\t\t\tstartDate: this.StartTime,\n\t\t\t\tendDate: this.EndTime,\n\t\t\t\tpageIndex: pagination.current - 1,\n\t\t\t\tpageSize: pagination.pageSize\n\t\t\t}\n\n\t\t\tthis.getData(data, pagination)\n\t\t},\n\t\tdataHandle(data, pagination) {\n\t\t\t// data.list.forEach(item => {\n\t\t\t// \titem = Object.assign(item, item.polluteDict)\n\t\t\t// })\n\t\t\t\n\t\t\tdata.list.forEach(item => {\n\t\t\t\titem.factors.forEach((fac,index)=>{\n\t\t\t\t\titem['factors' + (index + 1)] = fac.instantaneousQuantity\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t\tthis.loading = false\n\t\t\tthis.data = data.list\n\t\t\tpagination.total = data.total\n\t\t\tthis.pagination = pagination\n\t\t},\n\t\tsearch() {\n\t\t\tthis.pagination.current = 1\n\t\t\tthis.data = []\n\t\t\tlet data = {\n\t\t\t\twellId: this.WellID.constructor == Array ? '' : this.WellID,\n\t\t\t\tstartDate: this.StartTime,\n\t\t\t\tendDate: this.EndTime,\n\t\t\t\tpageIndex: pagination.current - 1,\n\t\t\t\tpageSize: pagination.pageSize\n\t\t\t}\n\t\t\tthis.getFirstPage(data)\n\t\t},\n\n\t\tdownload() {\n\t\t\tlet params = {\n\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\n\t\t\t\t//WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\n\t\t\t\tStartTime: this.StartTime,\n\t\t\t\tEndTime: this.EndTime,\n\t\t\t}\n\t\t\texportWellTimeData(params).then(res => {\n\t\t\t\tvar iframe = document.createElement(\"iframe\")\n\t\t\t\tiframe.style.display = \"none\";\n\t\t\t\tiframe.src = res.result;\n\t\t\t\tdocument.body.appendChild(iframe);\n\t\t\t})\n\t\t},\n\n\t\ttableHeight(data) {\n\t\t\tthis.scrolly = data - 75\n\t\t},\n\t\tcustomRow(record, index) {\n\t\t\treturn {\n\t\t\t\tstyle: {\n\t\t\t\t\tbackgroundColor: index % 2 ? '#fff' : '#f0f2f5'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tchartOpen() {\n\t\t\tthis.$refs.modal.visible = true\n\t\t},\n\t\tchartData(data) {\n\t\t\twellTimeChart(data).then(res => {\n\t\t\t\tif (res.status === '0') {\n\t\t\t\t\tif (res.result.avgList && res.result.avgList.length) {\n\t\t\t\t\t\tthis.$refs.modal.avgData = res.result.avgList\n\t\t\t\t\t\tthis.$refs.modal.avgunit = res.result.avgUnit\n\t\t\t\t\t}\n\t\t\t\t\tif (res.result.rtdList && res.result.rtdList.length) {\n\t\t\t\t\t\tthis.$refs.modal.rtdData = res.result.rtdList\n\t\t\t\t\t\tthis.$refs.modal.rtdunit = res.result.rtdUnit\n\t\t\t\t\t}\n\t\t\t\t\tif (res.result.couList && res.result.couList.length) {\n\t\t\t\t\t\tthis.$refs.modal.couData = res.result.couList\n\t\t\t\t\t\tthis.$refs.modal.couunit = res.result.couUnit\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n})\n",{"version":3,"sources":["sewage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sewage.vue","sourceRoot":"src/page/monitor/data","sourcesContent":["<template>\r\n\t<sub-menu @getHeight=\"tableHeight($event)\">\r\n\t\t<template slot=\"left\">\r\n\t\t\t<div></div>\r\n\t\t</template>\r\n\t\t<template slot=\"right\">\r\n\t\t\t<a-select show-search v-model=\"WellID\" placeholder=\"监控点名称\" option-filter-prop=\"children\"\r\n\t\t\t\tstyle=\"width: 120px\" @change=\"wellChange\">\r\n\t\t\t\t<a-select-option v-for=\"item in wellList\" :value=\"item.id\" :key=\"item.id\">{{item.wellName}}\r\n\t\t\t\t</a-select-option>\r\n\t\t\t</a-select>\r\n\t\t\t<a-range-picker @change=\"DateChange\" />\r\n\t\t\t<a-button type=\"primary\" @click=\"search\">查询</a-button>\r\n\t\t</template>\r\n\t\t<template slot=\"table\">\r\n\t\t\t<a-table style=\"height: 100%;\" :columns=\"columns\" :data-source=\"data\" :loading=\"loading\"\r\n\t\t\t\t:scroll=\"{ x: scrollx,y: scrolly }\" :rowKey=\"record => record.id\" size=\"middle\" :pagination=\"pagination\"\r\n\t\t\t\t@change=\"pageChange\" :customRow=\"customRow\">\r\n\t\t\t\t<span slot=\"number\" slot-scope=\"text, record, index\">\r\n\t\t\t\t\t{{index + 1 }}\r\n\t\t\t\t</span>\r\n\t\t\t</a-table>\r\n\t\t</template>\r\n\t\t<template slot=\"fixed\">\r\n\t\t\t<modal ref=\"modal\" title=\"数据统计与报表/水质数据报表/实时数据报表\" :wellList=\"wellList\" rtd :getData=\"chartData\"></modal>\r\n\t\t</template>\r\n\t</sub-menu>\r\n</template>\r\n\r\n<script>\r\n\timport SubModule from '@/components/subModule.vue'\r\n\timport modal from '@/components/chart/well.vue'\r\n\timport fileDownload from 'js-file-download'\r\n\r\n\timport {\r\n\t\twellNames,\r\n\t\twellMonitorPoint,\r\n\t\twellTimeDatas,\r\n\t\twellTimeChart,\r\n\t\twellMonitor\r\n\t} from '@/request/api'\r\n\r\n\timport {\r\n\t\texportWellTimeData\r\n\t} from '@/request/api2'\r\n\r\n\r\n\r\n\texport default ({\r\n\t\tcomponents: {\r\n\t\t\t'sub-menu': SubModule,\r\n\t\t\t'modal': modal\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\twellList: [],\r\n\t\t\t\tWellID: [],\r\n\t\t\t\twellMonitorPointList: [],\r\n\t\t\t\t//WellMonitorPointID: [],\r\n\t\t\t\tStartTime: '',\r\n\t\t\t\tEndTime: '',\r\n\t\t\t\tscrollx: '',\r\n\t\t\t\tscrolly: '',\r\n\t\t\t\tfieldNames: {\r\n\t\t\t\t\tchildren: 'childNameList',\r\n\t\t\t\t\tlabel: 'regionName',\r\n\t\t\t\t\tvalue: 'id',\r\n\t\t\t\t},\r\n\t\t\t\tcolumns: [],\r\n\t\t\t\tcolumnsDefault: [{\r\n\t\t\t\t\t\ttitle: '序号',\r\n\t\t\t\t\t\tdataIndex: 'number',\r\n\t\t\t\t\t\tscopedSlots: {\r\n\t\t\t\t\t\t\tcustomRender: 'number'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\twidth: 50,\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '监控点名称',\r\n\t\t\t\t\t\tdataIndex: 'wellName',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '监测时间',\r\n\t\t\t\t\t\tdataIndex: 'monitorTimeText',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\ttitle: '在线状态',\r\n\t\t\t\t\t\tdataIndex: 'onlineStatus',\r\n\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tdefaultPageSize: 20,\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tshowQuickJumper: true,\r\n\t\t\t\t\tshowSizeChanger: true,\r\n\t\t\t\t\tcurrent: 1,\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// 获取截污井名称列表\r\n\t\t\twellNames().then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tthis.wellList = res.result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet data = {\r\n\t\t\t\tpageIndex: this.pagination.current - 1,\r\n\t\t\t\tpageSize: this.pagination.pageSize\r\n\t\t\t}\r\n\t\t\t// 获取第一页数据\r\n\t\t\tthis.getFirstPage(data)\r\n\t\t},\r\n\t\tmounted() {},\r\n\t\tmethods: {\r\n\t\t\twellChange(value) {\r\n\t\t\t\tthis.getWellMonitorPoint(value)\r\n\t\t\t},\r\n\t\t\tgetWellMonitorPoint(id) {\r\n\t\t\t\twellMonitorPoint({\r\n\t\t\t\t\tregionId: id\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\t// this.holeList = res.result\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tDateChange(date, dateString) {\r\n\t\t\t\tthis.StartTime = dateString[0]\r\n\t\t\t\tthis.EndTime = dateString[1]\r\n\t\t\t},\r\n\t\t\tgetFirstPage(data) {\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\t// 获取列表表头和首页数据\r\n\t\t\t\tthis.columns = []\r\n\t\t\t\tthis.columns = this.columns.concat(this.columnsDefault)\r\n\t\t\t\twellMonitor(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tconst factors = res.result.list[0].factors\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfactors.forEach((item,index) => {\r\n\t\t\t\t\t\t\tthis.columns.push({\r\n\t\t\t\t\t\t\t\ttitle: item.factorName,\r\n\t\t\t\t\t\t\t\tdataIndex: 'factors' + (index + 1),\r\n\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t// const isFixed = Object.keys(polluteDict).length > 10\r\n\r\n\t\t\t\t\t\t// this.scrollx = isFixed ? 350 : ''\r\n\r\n\t\t\t\t\t\t// this.columns.forEach((item,index)=>{\r\n\t\t\t\t\t\t// \titem.fixed = isFixed\r\n\t\t\t\t\t\t// \tif (index && !isFixed) {\r\n\t\t\t\t\t\t// \t\titem.width = ''\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// })\r\n\r\n\t\t\t\t\t\t// Object.keys(polluteDict).forEach(key => {\r\n\t\t\t\t\t\t// \tthis.columns.push({\r\n\t\t\t\t\t\t// \t\ttitle: key,\r\n\t\t\t\t\t\t// \t\tdataIndex: key,\r\n\t\t\t\t\t\t// \t\talign: 'center',\r\n\t\t\t\t\t\t// \t\twidth: isFixed ? 140 : ''\r\n\t\t\t\t\t\t// \t})\r\n\t\t\t\t\t\t// \tthis.scrollx += isFixed ? 140 : ''\r\n\t\t\t\t\t\t// });\r\n\t\t\t\t\t\tthis.dataHandle(res.result, this.pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t\tthis.pagination.total = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetData(data, pagination) {\r\n\t\t\t\twellMonitor(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tthis.dataHandle(res.result, pagination)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpageChange(pagination, filters, sorter) {\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\twellId: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\tstartDate: this.StartTime,\r\n\t\t\t\t\tendDate: this.EndTime,\r\n\t\t\t\t\tpageIndex: pagination.current - 1,\r\n\t\t\t\t\tpageSize: pagination.pageSize\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getData(data, pagination)\r\n\t\t\t},\r\n\t\t\tdataHandle(data, pagination) {\r\n\t\t\t\t// data.list.forEach(item => {\r\n\t\t\t\t// \titem = Object.assign(item, item.polluteDict)\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\tdata.list.forEach(item => {\r\n\t\t\t\t\titem.factors.forEach((fac,index)=>{\r\n\t\t\t\t\t\titem['factors' + (index + 1)] = fac.instantaneousQuantity\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tthis.loading = false\r\n\t\t\t\tthis.data = data.list\r\n\t\t\t\tpagination.total = data.total\r\n\t\t\t\tthis.pagination = pagination\r\n\t\t\t},\r\n\t\t\tsearch() {\r\n\t\t\t\tthis.pagination.current = 1\r\n\t\t\t\tthis.data = []\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\twellId: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\tstartDate: this.StartTime,\r\n\t\t\t\t\tendDate: this.EndTime,\r\n\t\t\t\t\tpageIndex: pagination.current - 1,\r\n\t\t\t\t\tpageSize: pagination.pageSize\r\n\t\t\t\t}\r\n\t\t\t\tthis.getFirstPage(data)\r\n\t\t\t},\r\n\r\n\t\t\tdownload() {\r\n\t\t\t\tlet params = {\r\n\t\t\t\t\tWellID: this.WellID.constructor == Array ? '' : this.WellID,\r\n\t\t\t\t\t//WellMonitorPointID: this.WellMonitorPointID.constructor == Array ? '' : this.WellMonitorPointID,\r\n\t\t\t\t\tStartTime: this.StartTime,\r\n\t\t\t\t\tEndTime: this.EndTime,\r\n\t\t\t\t}\r\n\t\t\t\texportWellTimeData(params).then(res => {\r\n\t\t\t\t\tvar iframe = document.createElement(\"iframe\")\r\n\t\t\t\t\tiframe.style.display = \"none\";\r\n\t\t\t\t\tiframe.src = res.result;\r\n\t\t\t\t\tdocument.body.appendChild(iframe);\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\ttableHeight(data) {\r\n\t\t\t\tthis.scrolly = data - 75\r\n\t\t\t},\r\n\t\t\tcustomRow(record, index) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tbackgroundColor: index % 2 ? '#fff' : '#f0f2f5'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tchartOpen() {\r\n\t\t\t\tthis.$refs.modal.visible = true\r\n\t\t\t},\r\n\t\t\tchartData(data) {\r\n\t\t\t\twellTimeChart(data).then(res => {\r\n\t\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\t\tif (res.result.avgList && res.result.avgList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.avgData = res.result.avgList\r\n\t\t\t\t\t\t\tthis.$refs.modal.avgunit = res.result.avgUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (res.result.rtdList && res.result.rtdList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.rtdData = res.result.rtdList\r\n\t\t\t\t\t\t\tthis.$refs.modal.rtdunit = res.result.rtdUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (res.result.couList && res.result.couList.length) {\r\n\t\t\t\t\t\t\tthis.$refs.modal.couData = res.result.couList\r\n\t\t\t\t\t\t\tthis.$refs.modal.couunit = res.result.couUnit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<style scoped>\r\n</style>\n"]}]}