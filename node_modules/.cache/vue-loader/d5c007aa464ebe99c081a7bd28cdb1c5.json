{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\yangkou-balance-management-system\\src\\components\\media\\park\\deviceStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\components\\media\\park\\deviceStatus.vue","mtime":1616403650330},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613790689000},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1613790689000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n\tdeviceStatus\n} from '@/request/api'\n\nexport default ({\n\tprops: {},\n\tdata() {\n\t\treturn {\n\t\t\tdom: null,\n\t\t\tvalue: [],\n\t\t}\n\t},\n\tcreated() {},\n\tmethods: {\n\t\tresize() {\n\t\t\tthis.dom.resize()\n\t\t},\n\t\tinit(name, data1, data2, id) {\n\t\t\tconsole.log(name, data1, data2, id)\n\t\t\tlet option = {\n\t\t\t\tlegend: {\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: '#fff'\n\t\t\t\t\t},\n\t\t\t\t\tbottom: 5,\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\ttop: 5,\n\t\t\t\t\tleft: 90,\n\t\t\t\t\tbottom: 30,\n\t\t\t\t\tright: 20,\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: [name],\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tcolor: '#fff'\n\t\t\t\t\t},\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: (value) => {\n\t\t\t\t\t\t\treturn '{text|' + value + '}{img|' + '}';\n\t\t\t\t\t\t},\n\t\t\t\t\t\trich: {\n\t\t\t\t\t\t\ttext: {\n\t\t\t\t\t\t\t\twidth: 50,\n\t\t\t\t\t\t\t\tlineHeight: 25,\n\t\t\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\t\t\tcolor: '#fff'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\timg: {\n\t\t\t\t\t\t\t\twidth: 12,\n\t\t\t\t\t\t\t\theight: 25,\n\t\t\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\t\t\tbackgroundColor: {\n\t\t\t\t\t\t\t\t\timage: require('../../../../static/icon/jt.png')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\ttrigger: 'axis',\n\t\t\t\t\taxisPointer: {\n\t\t\t\t\t\ttype: 'cross'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisPointer: {\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tbackgroundColor: '#6a7985'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [{\n\t\t\t\t\tname: name == '在线状态' ? '在线' : name + '开',\n\t\t\t\t\tdata: [data1],\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tbarGap: '50%',\n\t\t\t\t\t// smooth: true,\n\t\t\t\t\t// symbol: 'none',\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\tcolor: '#0167e8'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\tcolor: '#13ace8'\n\t\t\t\t\t\t\t}]),\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}, {\n\t\t\t\t\tname: name == '在线状态' ? '离线' : name + '关',\n\t\t\t\t\tdata: [data2],\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t// smooth: true,\n\t\t\t\t\t// symbol: 'none',\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\tcolor: '#8f071e'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\tcolor: '#f85163'\n\t\t\t\t\t\t\t}]),\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}],\n\t\t\t};\n\n\t\t\tthis.dom = this.$echarts.init(document.getElementById(id))\n\t\t\tthis.dom.setOption(option)\n\t\t}\n\t},\n\tmounted() {\n\t\tdeviceStatus({\n\t\t\tregionID: global.regionID,\n\t\t}).then(res => {\n\t\t\tif (res.status === '0') {\n\t\t\t\tconsole.log(res.result)\n\t\t\t\tthis.init('阀门', res.result.valveStatusOn, res.result.valveStatusOff, 'valve')\n\t\t\t\tthis.init('门禁', res.result.accessStatusOn, res.result.accessStatusOff, 'access')\n\t\t\t\tthis.init('在线状态', res.result.online, res.result.offline, 'line')\n\t\t\t\tthis.resize()\n\t\t\t} else {\n\t\t\t\tconsole.log(res.message)\n\t\t\t}\n\t\t})\n\t}\n})\n",{"version":3,"sources":["deviceStatus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"deviceStatus.vue","sourceRoot":"src/components/media/park","sourcesContent":["<template>\r\n\t<div class=\"media-warp\">\r\n\t\t<div class=\"media-warp-title\">当前设备工作状态</div>\r\n\t\t<div class=\"media-warp-chart\">\r\n\t\t\t<div id=\"device\" class=\"chart\">\r\n\t\t\t\t<div id=\"valve\"></div>\r\n\t\t\t\t<div id=\"access\"></div>\r\n\t\t\t\t<div id=\"line\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tdeviceStatus\r\n\t} from '@/request/api'\r\n\r\n\texport default ({\r\n\t\tprops: {},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tdom: null,\r\n\t\t\t\tvalue: [],\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {},\r\n\t\tmethods: {\r\n\t\t\tresize() {\r\n\t\t\t\tthis.dom.resize()\r\n\t\t\t},\r\n\t\t\tinit(name, data1, data2, id) {\r\n\t\t\t\tconsole.log(name, data1, data2, id)\r\n\t\t\t\tlet option = {\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\ttextStyle: {\r\n\t\t\t\t\t\t\tcolor: '#fff'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbottom: 5,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\ttop: 5,\r\n\t\t\t\t\t\tleft: 90,\r\n\t\t\t\t\t\tbottom: 30,\r\n\t\t\t\t\t\tright: 20,\r\n\t\t\t\t\t},\r\n\t\t\t\t\txAxis: {\r\n\t\t\t\t\t\ttype: 'value',\r\n\t\t\t\t\t\taxisLine: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\taxisTick: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsplitLine: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\t\tshow: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tyAxis: {\r\n\t\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\t\tdata: [name],\r\n\t\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\tcolor: '#fff'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\taxisLine: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\taxisTick: {\r\n\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\taxisLabel: {\r\n\t\t\t\t\t\t\tformatter: (value) => {\r\n\t\t\t\t\t\t\t\treturn '{text|' + value + '}{img|' + '}';\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\trich: {\r\n\t\t\t\t\t\t\t\ttext: {\r\n\t\t\t\t\t\t\t\t\twidth: 50,\r\n\t\t\t\t\t\t\t\t\tlineHeight: 25,\r\n\t\t\t\t\t\t\t\t\talign: 'left',\r\n\t\t\t\t\t\t\t\t\tcolor: '#fff'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\timg: {\r\n\t\t\t\t\t\t\t\t\twidth: 12,\r\n\t\t\t\t\t\t\t\t\theight: 25,\r\n\t\t\t\t\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: {\r\n\t\t\t\t\t\t\t\t\t\timage: require('../../../../static/icon/jt.png')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\ttrigger: 'axis',\r\n\t\t\t\t\t\taxisPointer: {\r\n\t\t\t\t\t\t\ttype: 'cross'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\taxisPointer: {\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tbackgroundColor: '#6a7985'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\tname: name == '在线状态' ? '在线' : name + '开',\r\n\t\t\t\t\t\tdata: [data1],\r\n\t\t\t\t\t\ttype: 'bar',\r\n\t\t\t\t\t\tbarGap: '50%',\r\n\t\t\t\t\t\t// smooth: true,\r\n\t\t\t\t\t\t// symbol: 'none',\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\tcolor: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n\t\t\t\t\t\t\t\t\toffset: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: '#0167e8'\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\toffset: 1,\r\n\t\t\t\t\t\t\t\t\tcolor: '#13ace8'\r\n\t\t\t\t\t\t\t\t}]),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tname: name == '在线状态' ? '离线' : name + '关',\r\n\t\t\t\t\t\tdata: [data2],\r\n\t\t\t\t\t\ttype: 'bar',\r\n\t\t\t\t\t\t// smooth: true,\r\n\t\t\t\t\t\t// symbol: 'none',\r\n\t\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\t\t\tcolor: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n\t\t\t\t\t\t\t\t\toffset: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: '#8f071e'\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\toffset: 1,\r\n\t\t\t\t\t\t\t\t\tcolor: '#f85163'\r\n\t\t\t\t\t\t\t\t}]),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}],\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.dom = this.$echarts.init(document.getElementById(id))\r\n\t\t\t\tthis.dom.setOption(option)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tdeviceStatus({\r\n\t\t\t\tregionID: global.regionID,\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif (res.status === '0') {\r\n\t\t\t\t\tconsole.log(res.result)\r\n\t\t\t\t\tthis.init('阀门', res.result.valveStatusOn, res.result.valveStatusOff, 'valve')\r\n\t\t\t\t\tthis.init('门禁', res.result.accessStatusOn, res.result.accessStatusOff, 'access')\r\n\t\t\t\t\tthis.init('在线状态', res.result.online, res.result.offline, 'line')\r\n\t\t\t\t\tthis.resize()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(res.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\t.media-warp {\r\n\t\tposition: absolute;\r\n\t\tright: 530px;\r\n\t\tbottom: 26px;\r\n\t\twidth: 400px;\r\n\t\theight: 316px;\r\n\t\tbackground: url(../../../../static/image/fixed3.png) no-repeat left bottom / 100% 300px;\r\n\r\n\t\t&-title {\r\n\t\t\twidth: 219px;\r\n\t\t\theight: 40px;\r\n\t\t\tmargin: 0 auto;\r\n\t\t\tbackground: url(../../../../static/image/fixed1-headr.png) no-repeat center center / 100% 100%;\r\n\t\t\tfont-size: 18px;\r\n\t\t\tline-height: 40px;\r\n\t\t\tcolor: #49b6db;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\r\n\t\t&-chart {\r\n\t\t\theight: calc(100% - 40px);\r\n\r\n\t\t\t.chart {\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tpadding: 20px 0 30px;\r\n\r\n\t\t\t\t&>div {\r\n\t\t\t\t\theight: calc(100% / 3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>\n"]}]}