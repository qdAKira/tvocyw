{"remainingRequest":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\yangkou-balance-management-system\\src\\page\\login-1.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\yangkou-balance-management-system\\src\\page\\login-1.vue","mtime":1613567049988},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606785092522},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1606785088317},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1606785115728},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606785092522},{"path":"D:\\Git\\yangkou-balance-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1606785111761}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nlet sha1 = require('sha1')\n\nimport {\n\tapiLogin,\n\tgetTokenApi,\n\tgetRegionName\n} from '@/request/api'\n\nexport default {\n\tdata() {\n\t\treturn {};\n\t},\n\tbeforeCreate() {\n\t\tthis.form = this.$form.createForm(this, {\n\t\t\tname: 'normal_login'\n\t\t});\n\t},\n\tcreated() {\n\t\t// getTokenApi({\n\t\t// \t\"ClientId\": \"client\",\n\t\t// \t\"ClientSecret\": \"123456\",\n\t\t// \t\"Scope\": \"SWSApi\"\n\t\t// }).then(res => {\n\t\t// \tconsole.log(res)\n\t\t// })\n\t},\n\tmethods: {\n\t\thandleSubmit(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.form.validateFields((err, values) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log('Received values of form: ', values);\n\t\t\t\t\tthis.$message.loading({\n\t\t\t\t\t\tcontent: '登录中...',\n\t\t\t\t\t\tkey: 'loading'\n\t\t\t\t\t})\n\t\t\t\t\tvalues.Password = sha1(values.Password).toUpperCase()\n\t\t\t\t\tlocalStorage.setItem('token', '')\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\tUserName: values.UserName,\n\t\t\t\t\t\tPassword: values.Password\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tapiLogin(data).then(res => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t\tif (res.status == 0) {\n\t\t\t\t\t\t\tlocalStorage.setItem('token', res.result.token)\n\t\t\t\t\t\t\tconsole.log(JSON.stringify(res.result.regoins))\n\t\t\t\t\t\t\tlocalStorage.setItem('regoins', JSON.stringify(res.result.regoins))\n\t\t\t\t\t\t\tglobal.regoins = JSON.parse(localStorage.getItem('regoins'))\n\t\t\t\t\t\t\tconsole.log(localStorage.getItem('regoins'))\n\t\t\t\t\t\t\tthis.$message.success({\n\t\t\t\t\t\t\t\tcontent: res.message,\n\t\t\t\t\t\t\t\tkey: 'loading',\n\t\t\t\t\t\t\t\tduration: 1,\n\t\t\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\t\t\tconsole.log(this.$route.query.redirect)\n\t\t\t\t\t\t\t\t\tthis.$router.push(this.$route.query.redirect)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.$message.error({\n\t\t\t\t\t\t\t\tcontent: res.message,\n\t\t\t\t\t\t\t\tkey: 'loading',\n\t\t\t\t\t\t\t\tduration: 1\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n};\n",{"version":3,"sources":["login-1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login-1.vue","sourceRoot":"src/page","sourcesContent":["<template>\r\n\t<a-form :form=\"form\" class=\"login-form\" @submit=\"handleSubmit\">\r\n\t\t<a-form-item>\r\n\t\t\t<a-input v-decorator=\"[\r\n\t          'UserName',\r\n\t          { rules: [{ required: true, message: 'Please input your username!' }] },\r\n\t        ]\"\r\n\t\t\t placeholder=\"Username\">\r\n\t\t\t\t<a-icon slot=\"prefix\" type=\"user\" style=\"color: rgba(0,0,0,.25)\" />\r\n\t\t\t</a-input>\r\n\t\t</a-form-item>\r\n\t\t<a-form-item>\r\n\t\t\t<a-input v-decorator=\"[\r\n\t          'Password',\r\n\t          { rules: [{ required: true, message: 'Please input your Password!' }] },\r\n\t        ]\"\r\n\t\t\t type=\"password\" placeholder=\"Password\">\r\n\t\t\t\t<a-icon slot=\"prefix\" type=\"lock\" style=\"color: rgba(0,0,0,.25)\" />\r\n\t\t\t</a-input>\r\n\t\t</a-form-item>\r\n\t\t<a-form-item>\r\n\t\t\t<a-checkbox v-decorator=\"[\r\n\t          'remember',\r\n\t          {\r\n\t            valuePropName: 'checked',\r\n\t            initialValue: true,\r\n\t          },\r\n\t        ]\">\r\n\t\t\t\tRemember me\r\n\t\t\t</a-checkbox>\r\n\t\t\t<a class=\"login-form-forgot\" href=\"\">\r\n\t\t\t\tForgot password\r\n\t\t\t</a>\r\n\t\t\t<a-button type=\"primary\" html-type=\"submit\" class=\"login-form-button\">\r\n\t\t\t\tLogin\r\n\t\t\t</a-button>\r\n\t\t</a-form-item>\r\n\t</a-form>\r\n</template>\r\n<script>\r\n\tlet sha1 = require('sha1')\r\n\r\n\timport {\r\n\t\tapiLogin,\r\n\t\tgetTokenApi,\r\n\t\tgetRegionName\r\n\t} from '@/request/api'\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {};\r\n\t\t},\r\n\t\tbeforeCreate() {\r\n\t\t\tthis.form = this.$form.createForm(this, {\r\n\t\t\t\tname: 'normal_login'\r\n\t\t\t});\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// getTokenApi({\r\n\t\t\t// \t\"ClientId\": \"client\",\r\n\t\t\t// \t\"ClientSecret\": \"123456\",\r\n\t\t\t// \t\"Scope\": \"SWSApi\"\r\n\t\t\t// }).then(res => {\r\n\t\t\t// \tconsole.log(res)\r\n\t\t\t// })\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\thandleSubmit(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.form.validateFields((err, values) => {\r\n\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t\t\t\tthis.$message.loading({\r\n\t\t\t\t\t\t\tcontent: '登录中...',\r\n\t\t\t\t\t\t\tkey: 'loading'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tvalues.Password = sha1(values.Password).toUpperCase()\r\n\t\t\t\t\t\tlocalStorage.setItem('token', '')\r\n\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\tUserName: values.UserName,\r\n\t\t\t\t\t\t\tPassword: values.Password\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\t\tapiLogin(data).then(res => {\r\n\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\tif (res.status == 0) {\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('token', res.result.token)\r\n\t\t\t\t\t\t\t\tconsole.log(JSON.stringify(res.result.regoins))\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('regoins', JSON.stringify(res.result.regoins))\r\n\t\t\t\t\t\t\t\tglobal.regoins = JSON.parse(localStorage.getItem('regoins'))\r\n\t\t\t\t\t\t\t\tconsole.log(localStorage.getItem('regoins'))\r\n\t\t\t\t\t\t\t\tthis.$message.success({\r\n\t\t\t\t\t\t\t\t\tcontent: res.message,\r\n\t\t\t\t\t\t\t\t\tkey: 'loading',\r\n\t\t\t\t\t\t\t\t\tduration: 1,\r\n\t\t\t\t\t\t\t\t\tonClose: () => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(this.$route.query.redirect)\r\n\t\t\t\t\t\t\t\t\t\tthis.$router.push(this.$route.query.redirect)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.$message.error({\r\n\t\t\t\t\t\t\t\t\tcontent: res.message,\r\n\t\t\t\t\t\t\t\t\tkey: 'loading',\r\n\t\t\t\t\t\t\t\t\tduration: 1\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\n"]}]}